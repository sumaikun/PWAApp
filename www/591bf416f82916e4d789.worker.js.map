{"version":3,"sources":["../591bf416f82916e4d789.worker.js","../webpack/bootstrap 591bf416f82916e4d789","../node_modules/babel-runtime/regenerator/index.js","helpers/indexDbModels.js","workers/userDataBase.worker.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js","helpers/fetchUserData.js","../node_modules/process/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","process","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","getAllFromStore","storeArray","storeData","clearStorages","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_this2","DB_NAME","storeName","a","req","indexedDB","open","onsuccess","evt","db","result","console","log","tx","transaction","store","objectStore","dataSet","getAll","close","target","onerror","arraySet","synchroState","request","id","put","event","add","data","clear","length","__WEBPACK_IMPORTED_MODULE_1__helpers_fetchUserData__","__WEBPACK_IMPORTED_MODULE_2__helpers_indexDbModels__","self","addEventListener","e","fetch","BASE_URL","method","headers","body","JSON","stringify","email","password","response","status","json","userData","users","fetchUserData","postMessage","catch","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","global","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","iterator","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","__WEBPACK_IMPORTED_MODULE_1__indexDbModels__","_this","userid","GET_PROJECTS_BY_USER","GET_FUNCTIONAL_UNITS","GET_FORESTAL_UNITS_URL","projects","all","map","project","phase","functionalUnits","functional","forestalUnits","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"591bf416f82916e4d789.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(3);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export generateDb */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getAllFromStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return storeArray; });\n/* unused harmony export deleteDb */\n/* unused harmony export getFromDb */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return storeData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return clearStorages; });\n/* unused harmony export deleteFromDb */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\nvar _this2=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var DB_NAME='plantar';var DB_VERSION=7;function generateDb(){console.log(\"openDb ...\");var req=indexedDB.open(DB_NAME,DB_VERSION);req.onsuccess=function(evt){var db=this.result;console.log(\"openDb DONE\");db.close();console.log(\"closeDb DONE\");};req.onerror=function(evt){console.error(\"openDb:\",evt.target.errorCode);};//this function is executed just one time when the db is deffined\nreq.onupgradeneeded=function(evt){console.log(\"openDb.onupgradeneeded\");var db=evt.target.result;try{store=this.transaction.objectStore('projects');db.deleteObjectStore('projects');db.deleteObjectStore('functionalUnits');db.deleteObjectStore('forestalUnits');db.deleteObjectStore('users');}catch(e){}var store=db.createObjectStore(\"projects\",{keyPath:'id',autoIncrement:true});store.createIndex('administrative_act','administrative_act',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('customer','customer',{unique:false});store.createIndex('customer_id','customer_id',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('enviromental_control','enviromental_control',{unique:false});store.createIndex('inspector','inspector',{unique:false});store.createIndex('location','location',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phase','phase',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('representative_name','representative_name',{unique:false});store.createIndex('representative_position','representative_position',{unique:false});store.createIndex('responsible','responsible',{unique:false});store.createIndex('role_id','role_id',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"functionalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('code','code',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('project_id','project_id',{unique:false});store.createIndex('type','type',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"forestalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('after_image','after_image',{unique:false});store.createIndex('cap_cm','cap_cm',{unique:false});store.createIndex('code','code',{unique:false});store.createIndex('commercial_heigth_m','commercial_heigth_m',{unique:false});store.createIndex('common_name','common_name',{unique:false});store.createIndex('condition','condition',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('cup_density','cup_density',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('end_treatment','end_treatment',{unique:false});store.createIndex('epiphytes','epiphytes',{unique:false});store.createIndex('family','family',{unique:false});store.createIndex('functional_unit_id','functional_unit_id',{unique:false});store.createIndex('general_image','general_image',{unique:false});store.createIndex('health_status','health_status',{unique:false});store.createIndex('id_image','id_image',{unique:false});store.createIndex('margin','margin',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('note','note',{unique:false});store.createIndex('origin','origin',{unique:false});store.createIndex('products','products',{unique:false});store.createIndex('reference_image','reference_image',{unique:false});store.createIndex('resolution','resolution',{unique:false});store.createIndex('scientific_name','scientific_name',{unique:false});store.createIndex('start_treatment','start_treatment',{unique:false});store.createIndex('state','state',{unique:false});store.createIndex('total_heigth_m','total_heigth_m',{unique:false});store.createIndex('treatment','treatment',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('waypoint','waypoint',{unique:false});store.createIndex('x_cup_diameter_m','x_cup_diameter_m',{unique:false});store.createIndex('y_cup_diameter_m','y_cup_diameter_m',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"users\",{keyPath:'id'});store.createIndex('address','address',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('document','document',{unique:false});store.createIndex('document_type_id','document_type_id',{unique:false});store.createIndex('email','email',{unique:false});store.createIndex('lastname','lastname',{unique:false});store.createIndex('updated_at','created_at',{unique:false});store.createIndex('position_id','position_id',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phone','phone',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});};}var getAllFromStore=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(storeName){var req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:req=indexedDB.open(DB_NAME);return _context.abrupt(\"return\",new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.getAll();dataSet.onsuccess=function(evt){console.log(\"dataSet success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};}));case 2:case\"end\":return _context.stop();}}},_callee,_this2);}));return function getAllFromStore(_x){return _ref.apply(this,arguments);};}();var storeArray=function storeArray(storeName,arraySet){var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(evt){var _this3=this;var db,tx,store,_loop,i;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);_loop=function _loop(i){if(arraySet[i].synchroState==null){arraySet[i].synchroState=true;}var request=store.get(arraySet[i].id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this3.result){var _process=store.put(arraySet[i]);_process.onsuccess=function(event){console.log(\"data updated\",event);};_process.onerror=function(event){console.log(\"error\",event);};console.log(\"update\");}else{var proccess=store.add(arraySet[i]);proccess.onsuccess=function(event){console.log(\"data added\",event);};process.onerror=function(event){console.log(\"error\",event);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};};for(i in arraySet){_loop(i);}_context2.next=8;return tx.onsuccess;case 8:console.log(\"transaction completed\");db.close();console.log(\"closeDb DONE\");case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var deleteDb=function deleteDb(){var req=indexedDB.deleteDatabase(DB_NAME);req.onsuccess=function(){console.log(\"Deleted database successfully\");};req.onerror=function(){console.log(\"Couldn't delete database\");};req.onblocked=function(){console.log(\"Couldn't delete database due to the operation being blocked\");};};var getFromDb=function getFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this4=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.get(elementId);dataSet.onsuccess=function(evt){console.log(\"data success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this4.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var storeData=function storeData(storeName,data){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(evt){var _this5=this;var db,tx,store,request;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);if(data.synchroState==null){data.synchroState=true;}request=store.get(data.id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this5.result){var _process2=store.put(data);_process2.onsuccess=function(event){console.log(\"data updated\",event);resolve(\"done\");};_process2.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"update\");}else{var proccess=store.add(data);proccess.onsuccess=function(event){console.log(\"data added\",event);resolve(\"done\");};process.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};case 8:case\"end\":return _context3.stop();}}},_callee3,this);}));return function(_x3){return _ref3.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var clearStorages=function clearStorages(storeArray){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(evt){var db,tx,i,store;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:db=this.result;tx=db.transaction(storeArray,'readwrite');_context4.t0=__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.keys(storeArray);case 3:if((_context4.t1=_context4.t0()).done){_context4.next=11;break;}i=_context4.t1.value;//console.log(storeArray.length);\n//console.log(i);\nstore=tx.objectStore(storeArray[i]);_context4.next=8;return store.clear();case 8:if(storeArray.length-1==i){resolve(\"done\");}else{console.log(\"no yet\");}/*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/_context4.next=3;break;case 11:case\"end\":return _context4.stop();}}},_callee4,this);}));return function(_x4){return _ref4.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\",evt);reject(_this2.error);};});};var deleteFromDb=function deleteFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this6=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readwrite');var store=tx.objectStore(storeName);var proc=store.delete(elementId);proc.onsuccess=function(evt){console.log(\"delete success\");db.close();resolve(evt.target.result);};proc.onerror=function(evt){console.log(\"delete error\");db.close();reject(_this6.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(6)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers_fetchUserData__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__helpers_indexDbModels__ = __webpack_require__(1);\nfunction _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}// Respond to message from parent thread\nself.addEventListener('message',function(e){// eslint-disable-line no-restricted-globals\n//console.log(e);\nvar BASE_URL='https://plantarfuturo.com/ws';fetch(BASE_URL+\"/api/login\",{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:e.data.email,password:e.data.password})}).then(function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(response){var userData,users;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(response.status);if(!(response.status===200)){_context.next=22;break;}_context.next=4;return response.json();case 4:userData=_context.sent;_context.next=7;return Object(__WEBPACK_IMPORTED_MODULE_2__helpers_indexDbModels__[\"b\" /* getAllFromStore */])(\"users\");case 7:users=_context.sent;if(!(users.length>0)){_context.next=16;break;}if(!(users[0].id==userData.id)){_context.next=13;break;}console.log(\"same user\");_context.next=16;break;case 13:console.log(\"different user\");_context.next=16;return Object(__WEBPACK_IMPORTED_MODULE_2__helpers_indexDbModels__[\"a\" /* clearStorages */])([\"projects\",\"functionalUnits\",\"forestalUnits\",\"users\"]);case 16:Object(__WEBPACK_IMPORTED_MODULE_2__helpers_indexDbModels__[\"d\" /* storeData */])(\"users\",userData);_context.next=19;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_fetchUserData__[\"a\" /* fetchUserData */])(userData.id);case 19:postMessage(\"success\");_context.next=23;break;case 22:postMessage(\"unauthorized\");case 23:case\"end\":return _context.stop();}}},_callee,this);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(err){console.log(err);postMessage(\"error\");});});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(4);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fetchUserData; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__indexDbModels__ = __webpack_require__(1);\nvar _this=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var fetchUserData=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(userid){var BASE_URL,GET_PROJECTS_BY_USER,GET_FUNCTIONAL_UNITS,GET_FORESTAL_UNITS_URL,projects;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:BASE_URL='https://plantarfuturo.com/ws';GET_PROJECTS_BY_USER=BASE_URL+\"/api/users/projects/\";GET_FUNCTIONAL_UNITS=BASE_URL+\"/api/project/functional-units/\";GET_FORESTAL_UNITS_URL=BASE_URL+'/api/functional-unit/forest-units/';//Get user projects\n_context3.next=6;return fetch(GET_PROJECTS_BY_USER+userid).then(function(response){return response.json();});case 6:projects=_context3.sent;console.log(projects);//here the project must be save on indexed db on a asynchronous way\nObject(__WEBPACK_IMPORTED_MODULE_1__indexDbModels__[\"c\" /* storeArray */])(\"projects\",projects);//---------------------------------------------------------------------\nreturn _context3.abrupt(\"return\",Promise.all(projects.map(function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(project){var functionalUnits;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(project.phase!=4&&project.phase!=5&&project.phase!=6)){_context2.next=8;break;}_context2.next=3;return fetch(GET_FUNCTIONAL_UNITS+project.id).then(function(response){return response.json();});case 3:functionalUnits=_context2.sent;console.log(\"functional units\");console.log(functionalUnits);Object(__WEBPACK_IMPORTED_MODULE_1__indexDbModels__[\"c\" /* storeArray */])(\"functionalUnits\",functionalUnits);return _context2.abrupt(\"return\",Promise.all(functionalUnits.map(function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(functional){var forestalUnits;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(GET_FORESTAL_UNITS_URL+functional.id).then(function(response){return response.json();});case 2:forestalUnits=_context.sent;console.log(\"forestal units\");console.log(forestalUnits);Object(__WEBPACK_IMPORTED_MODULE_1__indexDbModels__[\"c\" /* storeArray */])(\"forestalUnits\",forestalUnits);case 6:case\"end\":return _context.stop();}}},_callee,_this);}));return function(_x3){return _ref3.apply(this,arguments);};}())));case 8:case\"end\":return _context2.stop();}}},_callee2,_this);}));return function(_x2){return _ref2.apply(this,arguments);};}())));case 10:case\"end\":return _context3.stop();}}},_callee3,_this);}));return function fetchUserData(_x){return _ref.apply(this,arguments);};}();\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// 591bf416f82916e4d789.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 591bf416f82916e4d789","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 0\n// module chunks = 0","const DB_NAME = 'plantar';\nconst DB_VERSION = 7; \n\nexport function generateDb() {    \n     console.log(\"openDb ...\");\n     let req = indexedDB.open(DB_NAME, DB_VERSION);\n\n    req.onsuccess = function (evt) {\n      const db = this.result;\n      console.log(\"openDb DONE\");\n      db.close();\n      console.log(\"closeDb DONE\");\n    };\n    req.onerror = function (evt) {\n      console.error(\"openDb:\", evt.target.errorCode);\n    };\n\n    //this function is executed just one time when the db is deffined\n    req.onupgradeneeded = function (evt) {\n        \n        console.log(\"openDb.onupgradeneeded\");\n        \n        let db = evt.target.result;\n\n        try {\n          store = this.transaction.objectStore('projects');\n          db.deleteObjectStore('projects');\n          db.deleteObjectStore('functionalUnits');\n          db.deleteObjectStore('forestalUnits');\n          db.deleteObjectStore('users');  \n        }\n        catch(e) {\n         \n        }        \n\n        let store = db.createObjectStore(\n            \"projects\", { keyPath: 'id', autoIncrement: true });\n    \n          store.createIndex('administrative_act', 'administrative_act', { unique: false });\n          store.createIndex('created_at', 'created_at', { unique: false });\n          store.createIndex('customer', 'customer', { unique: false });\n          store.createIndex('customer_id', 'customer_id', { unique: false });\n          store.createIndex('east_coord', 'east_coord', { unique: false });\n          store.createIndex('enviromental_control', 'enviromental_control', { unique: false });  \n          store.createIndex('inspector', 'inspector', { unique: false });  \n          store.createIndex('location', 'location', { unique: false });\n          store.createIndex('name', 'name', { unique: false });\n          store.createIndex('phase', 'phase', { unique: false });\n          store.createIndex('north_coord', 'north_coord', { unique: false });\n          store.createIndex('representative_name', 'representative_name', { unique: false });\n          store.createIndex('representative_position', 'representative_position', { unique: false });\n          store.createIndex('responsible', 'responsible', { unique: false });\n          store.createIndex('role_id', 'role_id', { unique: false });\n          store.createIndex('updated_at', 'updated_at', { unique: false });\n          store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n        store = db.createObjectStore(\n            \"functionalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('project_id', 'project_id', { unique: false });\n           store.createIndex('type', 'type', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n        store = db.createObjectStore(\n            \"forestalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('after_image', 'after_image', { unique: false });\n           store.createIndex('cap_cm', 'cap_cm', { unique: false });\n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('commercial_heigth_m', 'commercial_heigth_m', { unique: false });\n           store.createIndex('common_name', 'common_name', { unique: false });\n           store.createIndex('condition', 'condition', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('cup_density', 'cup_density', { unique: false });\n           store.createIndex('east_coord', 'east_coord', { unique: false });\n           store.createIndex('end_treatment', 'end_treatment', { unique: false });\n           store.createIndex('epiphytes', 'epiphytes', { unique: false }); \n           store.createIndex('family', 'family', { unique: false });             \n           store.createIndex('functional_unit_id', 'functional_unit_id', { unique: false });\n           store.createIndex('general_image', 'general_image', { unique: false });\n           store.createIndex('health_status', 'health_status', { unique: false });\n           store.createIndex('id_image', 'id_image', { unique: false });\n           store.createIndex('margin', 'margin', { unique: false });\n           store.createIndex('north_coord', 'north_coord', { unique: false });\n           store.createIndex('note', 'note', { unique: false });\n           store.createIndex('origin', 'origin', { unique: false });\n           store.createIndex('products', 'products', { unique: false });\n           store.createIndex('reference_image', 'reference_image', { unique: false });\n           store.createIndex('resolution', 'resolution', { unique: false });\n           store.createIndex('scientific_name', 'scientific_name', { unique: false });\n           store.createIndex('start_treatment', 'start_treatment', { unique: false });\n           store.createIndex('state', 'state', { unique: false });\n           store.createIndex('total_heigth_m', 'total_heigth_m', { unique: false });\n           store.createIndex('treatment', 'treatment', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('waypoint', 'waypoint', { unique: false });\n           store.createIndex('x_cup_diameter_m', 'x_cup_diameter_m', { unique: false });\n           store.createIndex('y_cup_diameter_m', 'y_cup_diameter_m', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n           store = db.createObjectStore(\n            \"users\", { keyPath: 'id' });\n            \n           store.createIndex('address', 'address', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('document', 'document', { unique: false });\n           store.createIndex('document_type_id', 'document_type_id', { unique: false });\n           store.createIndex('email', 'email', { unique: false });\n           store.createIndex('lastname', 'lastname', { unique: false });\n           store.createIndex('updated_at', 'created_at', { unique: false });\n           store.createIndex('position_id', 'position_id', { unique: false });\n           store.createIndex('name', 'name', { unique: false });\n           store.createIndex('phone', 'phone', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n    };\n}\n\nexport const getAllFromStore = async (storeName) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.getAll();\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"dataSet success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");           \n            reject(this.error);\n        }\n\n    });\n\n    \n\n}\n\n\nexport const storeArray = (storeName, arraySet) => {\n\n    let req = indexedDB.open(DB_NAME);\n\n      req.onsuccess = async function (evt) {\n        \n        const db = this.result;\n        console.log(\"openDb DONE\");\n\n        let tx = db.transaction(storeName, 'readwrite');\n        let store = tx.objectStore(storeName);     \n        \n        for(let i in arraySet)\n        {\n\n            if(arraySet[i].synchroState == null)\n            {\n                arraySet[i].synchroState = true;\n            } \n\n            let request = store.get(arraySet[i].id);\n            \n            request.onsuccess = (evt) => {\n                \n                console.log(\"success request\",evt);\n                \n                if(this.result)\n                {\n                    let process = store.put(arraySet[i])\n                    process.onsuccess = function(event) {                        \n                        console.log(\"data updated\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n\n                    console.log(\"update\");\n                }\n                else{\n                    let proccess = store.add(arraySet[i]);\n                    proccess.onsuccess = function(event) {\n                        console.log(\"data added\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n                    \n                    console.log(\"create\");                    \n                }\n                \n            };\n\n            request.onerror = evt =>{\n                console.log(\"error request\",evt);\n            }   \n        \n        }    \n        await tx.onsuccess;\n        console.log(\"transaction completed\");    \n        db.close();\n        console.log(\"closeDb DONE\");        \n      };\n \n\n}\n\nexport const deleteDb = ()=>{\n    let req = indexedDB.deleteDatabase(DB_NAME);\n    req.onsuccess = function () {\n        console.log(\"Deleted database successfully\");\n    };\n    req.onerror = function () {\n        console.log(\"Couldn't delete database\");\n    };\n    req.onblocked = function () {\n        console.log(\"Couldn't delete database due to the operation being blocked\");\n    };\n}\n\nexport const getFromDb = (storeName, elementId) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.get(elementId);\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"data success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n\n    });\n}\n\nexport const storeData = (storeName, data) => {\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = async function (evt) {\n            const db = this.result;\n            console.log(\"openDb DONE\");\n\n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            \n                if(data.synchroState == null)\n                {\n                    data.synchroState = true;\n                } \n\n                let request = store.get(data.id);\n                \n                request.onsuccess = (evt) => {\n                    \n                    console.log(\"success request\",evt);\n                    \n                    if(this.result)\n                    {\n                        let process = store.put(data)\n                        process.onsuccess = function(event) {                        \n                            console.log(\"data updated\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n\n                        console.log(\"update\");\n                    }\n                    else{\n                        let proccess = store.add(data);\n                        proccess.onsuccess = function(event) {\n                            console.log(\"data added\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n                        \n                        console.log(\"create\");                    \n                    }\n                    \n                };\n\n                request.onerror = evt =>{\n                    console.log(\"error request\",evt);\n                }       \n        }\n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n    });\n}\n\nexport const clearStorages = (storeArray) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        req.onsuccess = async function (evt) {\n\n            const db = this.result;\n            let tx = db.transaction(storeArray, 'readwrite');\n    \n            for(let i in storeArray)\n            {\n                //console.log(storeArray.length);\n                //console.log(i);\n    \n                let store = tx.objectStore(storeArray[i]);\n    \n                await store.clear();\n\n                if(storeArray.length -1 == i )\n                {\n                    resolve(\"done\");\n                }\n                else{\n                    console.log(\"no yet\");\n                }\n                \n                /*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/\n            }\n        }\n        req.onerror = (evt) =>{\n            console.log(\"error opening db\",evt);\n            reject(this.error);\n        }\n    });    \n\n}\n\nexport const deleteFromDb = (storeName, elementId) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            let proc = store.delete(elementId);\n            proc.onsuccess = (evt) =>{\n                console.log(\"delete success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            proc.onerror = (evt) =>{\n                console.log(\"delete error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n      \n    });\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/indexDbModels.js","import { fetchUserData } from \"../helpers/fetchUserData\";\nimport { storeData , getAllFromStore , clearStorages } from \"../helpers/indexDbModels\"; \n\n// Respond to message from parent thread\nself.addEventListener('message', e => { // eslint-disable-line no-restricted-globals\n\n    //console.log(e);\n    const BASE_URL = 'https://plantarfuturo.com/ws';\n\n    fetch(BASE_URL+\"/api/login\", { \n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: e.data.email,\n            password: e.data.password,\n        })\n    }).then( async function(response) {          \n        \n        console.log(response.status);\n\n        if(response.status === 200)\n        {           \n            const userData = await response.json();\n            \n            const users = await getAllFromStore(\"users\");\n            \n            if(users.length > 0)\n            {\n                if(users[0].id  == userData.id)\n                {\n                    console.log(\"same user\");\n                }\n                else{\n                    console.log(\"different user\");\n                    await clearStorages([\"projects\",\"functionalUnits\",\"forestalUnits\",\"users\"]);\n                }\n            }\n\n            storeData(\"users\",userData);\n            await fetchUserData(userData.id);\n\n            postMessage(\"success\");       \n        }\n        else{\n            postMessage(\"unauthorized\");\n        }\n       \n    }).catch(function(err) {\n        console.log(err)\n        postMessage(\"error\");    \n    });\n\n    \n});\n\n\n// WEBPACK FOOTER //\n// ./src/workers/userDataBase.worker.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js\n// module id = 4\n// module chunks = 0","import { storeArray } from \"./indexDbModels\";\n\nexport const fetchUserData = async (userid) => {   \n\n    const BASE_URL = 'https://plantarfuturo.com/ws';\n\n    const GET_PROJECTS_BY_USER = BASE_URL+\"/api/users/projects/\";\n\n    const GET_FUNCTIONAL_UNITS = BASE_URL+\"/api/project/functional-units/\";\n\n    const GET_FORESTAL_UNITS_URL = BASE_URL+'/api/functional-unit/forest-units/';\n    //Get user projects\n\n    let projects = await fetch(GET_PROJECTS_BY_USER+userid)\n                                    .then(response => response.json());\n                                \n    console.log(projects);\n\n      //here the project must be save on indexed db on a asynchronous way\n      storeArray(\"projects\",projects);\n      //---------------------------------------------------------------------\n\n    return Promise.all(\n\n        projects.map( async project => {\n\n            if(project.phase != 4 && project.phase != 5 && project.phase != 6)\n            {\n                //here fetch functional units for forestal projects in background \n\n                let functionalUnits = await fetch(GET_FUNCTIONAL_UNITS+project.id)\n                            .then(response => response.json());\n\n                console.log(\"functional units\");\n                console.log(functionalUnits);\n                storeArray(\"functionalUnits\",functionalUnits);\n\n                return Promise.all(\n\n                    functionalUnits.map(async functional =>{\n                        let forestalUnits = await fetch(GET_FORESTAL_UNITS_URL +functional.id)\n                                .then(response => response.json());\n                        \n                        console.log(\"forestal units\");\n                        console.log(forestalUnits);\n                        \n                        storeArray(\"forestalUnits\",forestalUnits);\n                    }));\n               \n            }\n\n    }));     \n\n       \n}    \n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/fetchUserData.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}