{"version":3,"sources":["../b8e0d0ba88964487d75b.worker.js","../webpack/bootstrap b8e0d0ba88964487d75b","../node_modules/babel-runtime/regenerator/index.js","workers/synchroData.worker.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js","helpers/indexDbModels.js","../node_modules/process/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","UpdateFunctionalUnit","cursor","responseResolve","data","a","fetch","FUNCTIONAL_UNIT_URL","id","method","headers","body","JSON","stringify","response","json","catch","console","synchroState","log","storeData","CreateFunctionalUnit","dbProccessArray","oldId","functionalU","indexedDB","open","DB_NAME","onsuccess","evt","db","result","tx","transaction","store","objectStore","index","singleKeyRange","IDBKeyRange","only","req","openCursor","event","target","functional_unit_id","push","continue","all","values","reason","postMessage","onerror","deleteFromDb","updateForestalUnit","getFromDb","funcUnit","project_id","project","URL","phase","FIRST_PHASE","SECOND_PHASE","THIRD_PHASE","status","text","createForestalUnit","newData","updatePlantationReport","PLANTATION_REPORT_URL","createPlantationReport","updateCivilReport","CIVIL_REPORT_URL","createCivilReport","updateExpense","EXPENSES_URL","createExpense","updateBoxExpense","EXPENSES_BOX_URL","createBoxExpense","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__","BASE_URL","promisesArray","self","addEventListener","e","Number","isInteger","civil","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","global","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","iterator","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","iteratorSymbol","isNaN","length","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","process","_this2","getAllFromStore","storeName","dataSet","getAll","close","elementId","request","put","add","proc","delete","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"b8e0d0ba88964487d75b.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__ = __webpack_require__(4);\nfunction _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var DB_NAME='plantar';var BASE_URL='https://plantarfuturo.com/ws';var FUNCTIONAL_UNIT_URL=BASE_URL+\"/api/functional-unit\";var FIRST_PHASE=BASE_URL+\"/api/forest-unit/first-phase\";var SECOND_PHASE=BASE_URL+\"/api/forest-unit\";var THIRD_PHASE=BASE_URL+\"/api/forest-unit/third-phase\";var PLANTATION_REPORT_URL=BASE_URL+\"/api/daily-report\";var CIVIL_REPORT_URL=BASE_URL+\"/api/civil-report\";var EXPENSES_URL=BASE_URL+\"/api/expense\";var EXPENSES_BOX_URL=BASE_URL+\"/api/bill\";var promisesArray=[];var responseResolve=\"done\";function UpdateFunctionalUnit(cursor){var _this=this;responseResolve=\"update\";var data=cursor.value;return new Promise(function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(FUNCTIONAL_UNIT_URL+\"/\"+data.id,{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify(cursor.value)}).then(function(response){return response.json();}).catch(function(err){console.error(\"updating functional unit\",err);reject(\"error\");});case 2:data.synchroState=true;console.log(\"data to change in db\",data);_context.next=6;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"functionalUnits\",data);case 6:resolve(\"done\");case 7:case'end':return _context.stop();}}},_callee,_this);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());}function CreateFunctionalUnit(cursor){var _this2=this;var dbProccessArray=[];responseResolve=\"update\";var data=cursor.value;var oldId=data.id;return new Promise(function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(resolve,reject){var functionalU;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;console.log(\"Init fetching functional unit --------\");_context4.next=4;return fetch(FUNCTIONAL_UNIT_URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).catch(function(error){// Your error is here!\nconsole.log(\"creating functional unit\",error);reject(\"error\");});case 4:functionalU=_context4.sent;;console.log(\"id generado\",functionalU);data.id=functionalU.id;data.synchroState=true;_context4.next=11;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"functionalUnits\",data);case 11:_context4.next=13;return new Promise(function(resolve,reject){var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(evt){var db,tx,store,index,singleKeyRange,req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:db=this.result;tx=db.transaction([\"functionalUnits\",\"forestalUnits\"],'readonly');store=tx.objectStore(\"forestalUnits\");index=store.index(\"functional_unit_id\");console.log(\"id value to filter\",oldId);singleKeyRange=IDBKeyRange.only(oldId);req=index.openCursor(singleKeyRange);req.onsuccess=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(event){var cursor,_data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:cursor=event.target.result;if(cursor){// Do something with the matches.                      \n_data=cursor.value;_data.functional_unit_id=functionalU.id;console.log(\"data to update\",_data);dbProccessArray.push(Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"forestalUnits\",_data));cursor.continue();}else{console.log(\"last filtered data\");Promise.all(dbProccessArray).then(function(values){console.log(values);resolve(\"done\");},function(reason){console.log(reason);postMessage(\"done with errors\");});}case 2:case'end':return _context2.stop();}}},_callee2,this);}));return function(_x6){return _ref4.apply(this,arguments);};}();req.onerror=function(evt){reject(error);};case 9:case'end':return _context3.stop();}}},_callee3,this);}));return function(_x5){return _ref3.apply(this,arguments);};}();});case 13:_context4.next=15;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"a\" /* deleteFromDb */])(\"functionalUnits\",oldId);case 15:resolve(\"Update functional Done\");_context4.next=22;break;case 18:_context4.prev=18;_context4.t0=_context4['catch'](0);console.log(\"error creating functional unit \",_context4.t0);reject(\"error\");case 22:case'end':return _context4.stop();}}},_callee4,_this2,[[0,18]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());}function updateForestalUnit(cursor){var _this3=this;responseResolve=\"update\";var data=cursor.value;return new Promise(function(){var _ref5=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee5(resolve,reject){var funcUnit,project,URL;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"b\" /* getFromDb */])(\"functionalUnits\",data.functional_unit_id);case 2:funcUnit=_context5.sent;console.log(\"registered fi\",funcUnit);_context5.next=6;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"b\" /* getFromDb */])(\"projects\",funcUnit.project_id);case 6:project=_context5.sent;console.log(\"project\",project);URL=void 0;_context5.t0=project.phase;_context5.next=_context5.t0===\"1\"?12:_context5.t0===\"2\"?14:_context5.t0===\"3\"?16:18;break;case 12:URL=FIRST_PHASE;return _context5.abrupt('break',18);case 14:URL=SECOND_PHASE;return _context5.abrupt('break',18);case 16:URL=THIRD_PHASE;return _context5.abrupt('break',18);case 18:_context5.next=20;return fetch(URL+\"/\"+data.id,{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"updating forestal unit\",err);reject(\"error\");});case 20:data.synchroState=true;_context5.next=23;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"forestalUnits\",data);case 23:resolve(\"done\");case 24:case'end':return _context5.stop();}}},_callee5,_this3);}));return function(_x7,_x8){return _ref5.apply(this,arguments);};}());}function createForestalUnit(cursor){var _this4=this;responseResolve=\"update\";var data=cursor.value;var oldId=cursor.value.id;return new Promise(function(){var _ref6=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee7(resolve,reject){var funcUnit,project,URL,newData;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"b\" /* getFromDb */])(\"functionalUnits\",data.functional_unit_id);case 2:funcUnit=_context7.sent;console.log(\"registered fi\",funcUnit,\"original data\",data);_context7.next=6;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"b\" /* getFromDb */])(\"projects\",funcUnit.project_id);case 6:project=_context7.sent;console.log(\"project\",project);URL=void 0;_context7.t0=project.phase;_context7.next=_context7.t0===\"1\"?12:_context7.t0===\"2\"?14:_context7.t0===\"3\"?16:18;break;case 12:URL=FIRST_PHASE;return _context7.abrupt('break',18);case 14:URL=SECOND_PHASE;return _context7.abrupt('break',18);case 16:URL=THIRD_PHASE;return _context7.abrupt('break',18);case 18:_context7.next=20;return fetch(URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(){var _ref7=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee6(response){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(response.status==500)){_context6.next=5;break;}//console.log(response);\nconsole.log(\"error detectado\");response.text().then(function(data){console.log(data);});_context6.next=8;break;case 5:_context6.next=7;return response.json();case 7:return _context6.abrupt('return',_context6.sent);case 8:case'end':return _context6.stop();}}},_callee6,_this4);}));return function(_x11){return _ref7.apply(this,arguments);};}()).catch(function(err){console.error(\"creating forestal unit\",err);reject(\"error\");});case 20:newData=_context7.sent;if(!newData.id){_context7.next=28;break;}data.id=newData.id;data.synchroState=true;_context7.next=26;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"forestalUnits\",data);case 26:_context7.next=28;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"a\" /* deleteFromDb */])(\"forestalUnits\",oldId);case 28:resolve(\"done\");case 29:case'end':return _context7.stop();}}},_callee7,_this4);}));return function(_x9,_x10){return _ref6.apply(this,arguments);};}());}function updatePlantationReport(cursor){var _this5=this;var data=cursor.value;return new Promise(function(){var _ref8=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee8(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return fetch(PLANTATION_REPORT_URL+\"/\"+data.id,{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"updating plantation report\",err);reject(\"error\");});case 2:data.synchroState=true;_context8.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"dailyReports\",data);case 5:resolve(\"done\");case 6:case'end':return _context8.stop();}}},_callee8,_this5);}));return function(_x12,_x13){return _ref8.apply(this,arguments);};}());}function createPlantationReport(cursor){var _this6=this;var data=cursor.value;return new Promise(function(){var _ref9=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee9(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return fetch(PLANTATION_REPORT_URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"create plantation report\",err);reject(\"error\");});case 2:data.synchroState=true;_context9.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"dailyReports\",data);case 5:resolve(\"done\");case 6:case'end':return _context9.stop();}}},_callee9,_this6);}));return function(_x14,_x15){return _ref9.apply(this,arguments);};}());}function updateCivilReport(cursor){var _this7=this;var data=cursor.value;return new Promise(function(){var _ref10=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee10(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return fetch(CIVIL_REPORT_URL+\"/\"+data.id,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"update civil report\",err);reject(\"error\");});case 2:data.synchroState=true;_context10.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"dailyReports\",data);case 5:resolve(\"done\");case 6:case'end':return _context10.stop();}}},_callee10,_this7);}));return function(_x16,_x17){return _ref10.apply(this,arguments);};}());}function createCivilReport(cursor){var _this8=this;var data=cursor.value;return new Promise(function(){var _ref11=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee11(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return fetch(CIVIL_REPORT_URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"create plantation report\",err);reject(\"error\");});case 2:data.synchroState=true;_context11.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"dailyReports\",data);case 5:resolve(\"done\");case 6:case'end':return _context11.stop();}}},_callee11,_this8);}));return function(_x18,_x19){return _ref11.apply(this,arguments);};}());}function updateExpense(cursor){var _this9=this;var data=cursor.value;return new Promise(function(){var _ref12=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee12(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.next=2;return fetch(EXPENSES_URL+\"/\"+data.id,{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"update expense\",err);reject(\"error\");});case 2:data.synchroState=true;_context12.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"expenses\",data);case 5:resolve(\"done\");case 6:case'end':return _context12.stop();}}},_callee12,_this9);}));return function(_x20,_x21){return _ref12.apply(this,arguments);};}());}function createExpense(cursor){var _this10=this;var data=cursor.value;return new Promise(function(){var _ref13=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee13(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_context13.next=2;return fetch(EXPENSES_URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"create expenses\",err);reject(\"error\");});case 2:data.synchroState=true;_context13.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"expenses\",data);case 5:resolve(\"done\");case 6:case'end':return _context13.stop();}}},_callee13,_this10);}));return function(_x22,_x23){return _ref13.apply(this,arguments);};}());}function updateBoxExpense(cursor){var _this11=this;var data=cursor.value;return new Promise(function(){var _ref14=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee14(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.next=2;return fetch(EXPENSES_BOX_URL+\"/\"+data.id,{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"update expense\",err);reject(\"error\");});case 2:data.synchroState=true;_context14.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"boxExpenses\",data);case 5:resolve(\"done\");case 6:case'end':return _context14.stop();}}},_callee14,_this11);}));return function(_x24,_x25){return _ref14.apply(this,arguments);};}());}function createBoxExpense(cursor){var _this12=this;var data=cursor.value;return new Promise(function(){var _ref15=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee15(resolve,reject){return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:_context15.next=2;return fetch(EXPENSES_BOX_URL,{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){if(response.status==500){console.log(\"error detectado\");response.text().then(function(data){console.log(data);});}}).catch(function(err){console.error(\"create box expenses\",err);reject(\"error\");});case 2:data.synchroState=true;_context15.next=5;return Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"c\" /* storeData */])(\"boxExpenses\",data);case 5:resolve(\"done\");case 6:case'end':return _context15.stop();}}},_callee15,_this12);}));return function(_x26,_x27){return _ref15.apply(this,arguments);};}());}self.addEventListener('message',function(e){// eslint-disable-line no-restricted-globals\nconsole.log(\"on synchro worker\");var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref16=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee21(evt){var db,tx,store,req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:db=this.result;tx=db.transaction([\"functionalUnits\"],'readonly');store=tx.objectStore(\"functionalUnits\");req=store.openCursor();_context21.next=6;return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref17=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee16(event){var cursor;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:cursor=event.target.result;if(cursor){if(cursor.value.synchroState==false){console.log(cursor.value);console.log(\"data to send\");if(!Number.isInteger(cursor.value.id)){console.log(\"special send\");promisesArray.push(CreateFunctionalUnit(cursor));}else{promisesArray.push(UpdateFunctionalUnit(cursor));}}cursor.continue();}else{console.log(\"last data\");//postMessage(\"done\");\nPromise.all(promisesArray).then(function(values){console.log(values);resolve(\"done\");},function(reason){console.error(\"error in functional units\",reason);reject(\"error in promise array\");});}case 2:case'end':return _context16.stop();}}},_callee16,this);}));return function(_x29){return _ref17.apply(this,arguments);};}();req.onerror=function(event){console.log(\"error\",event);//postMessage(\"error\");\nreject(error);};});case 6:tx=db.transaction([\"forestalUnits\"],'readonly');_context21.next=9;return new Promise(function(resolve,reject){store=tx.objectStore(\"forestalUnits\");req=store.openCursor();req.onsuccess=function(){var _ref18=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee17(event){var cursor;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:cursor=event.target.result;if(cursor){if(!cursor.value.synchroState){console.log(cursor.value);console.log(\"data to send\");if(!Number.isInteger(cursor.value.id)){if(Number.isInteger(cursor.value.functional_unit_id)){console.log(\"new data\");promisesArray.push(createForestalUnit(cursor));}}else{console.log(\"update data\");promisesArray.push(updateForestalUnit(cursor));}}cursor.continue();}else{console.log(\"last data\");Promise.all(promisesArray).then(function(values){console.log(values);//postMessage(responseResolve);\nresolve(\"done\");},function(reason){console.error(\"forestal unit errors\",reason);//postMessage(\"done with errors\");\nreject(\"error in promise array\");});}case 2:case'end':return _context17.stop();}}},_callee17,this);}));return function(_x30){return _ref18.apply(this,arguments);};}();req.onerror=function(event){console.log(\"error\",event);//postMessage(\"error\");\nreject(event);};});case 9:tx=db.transaction([\"dailyReports\"],'readonly');_context21.next=12;return new Promise(function(resolve,reject){store=tx.objectStore(\"dailyReports\");req=store.openCursor();req.onsuccess=function(){var _ref19=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee18(event){var cursor;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:cursor=event.target.result;if(cursor){if(!cursor.value.synchroState){console.log(cursor.value);console.log(\"data to send\");if(!Number.isInteger(cursor.value.id)){console.log(\"new data\");if(cursor.value.civil){promisesArray.push(createCivilReport(cursor));}else{promisesArray.push(createPlantationReport(cursor));}}else{console.log(\"update data\");if(cursor.value.civil){promisesArray.push(updateCivilReport(cursor));}else{promisesArray.push(updatePlantationReport(cursor));}}}cursor.continue();}else{console.log(\"last data\");Promise.all(promisesArray).then(function(values){console.log(values);//postMessage(responseResolve);\nresolve(\"done\");},function(reason){console.error(\" plantation and civil errors\",reason);//postMessage(\"done with errors\");\nreject(\"error in promise array\");});}case 2:case'end':return _context18.stop();}}},_callee18,this);}));return function(_x31){return _ref19.apply(this,arguments);};}();req.onerror=function(event){console.log(\"error\",event);//postMessage(\"error\");\nreject(event);};});case 12:tx=db.transaction([\"expenses\"],'readonly');_context21.next=15;return new Promise(function(resolve,reject){store=tx.objectStore(\"expenses\");req=store.openCursor();req.onsuccess=function(){var _ref20=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee19(event){var cursor;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:cursor=event.target.result;if(cursor){if(!cursor.value.synchroState){console.log(cursor.value);console.log(\"data to send\");if(!Number.isInteger(cursor.value.id)){console.log(\"new data\");promisesArray.push(createExpense(cursor));}else{console.log(\"update data\");promisesArray.push(updateExpense(cursor));}}cursor.continue();}else{console.log(\"last data\");Promise.all(promisesArray).then(function(values){console.log(values);//postMessage(responseResolve);\nresolve(\"done\");},function(reason){console.error(\" expenses errors\",reason);//postMessage(\"done with errors\");\nreject(\"error in promise array\");});}case 2:case'end':return _context19.stop();}}},_callee19,this);}));return function(_x32){return _ref20.apply(this,arguments);};}();req.onerror=function(event){console.log(\"error\",event);//postMessage(\"error\");\nreject(event);};});case 15:tx=db.transaction([\"boxExpenses\"],'readonly');_context21.next=18;return new Promise(function(resolve,reject){store=tx.objectStore(\"boxExpenses\");req=store.openCursor();req.onsuccess=function(){var _ref21=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee20(event){var cursor;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:cursor=event.target.result;if(cursor){if(!cursor.value.synchroState){console.log(cursor.value);console.log(\"data to send\");if(!Number.isInteger(cursor.value.id)){console.log(\"new data\");promisesArray.push(createBoxExpense(cursor));}else{console.log(\"update data\");promisesArray.push(updateBoxExpense(cursor));}}cursor.continue();}else{console.log(\"last data\");Promise.all(promisesArray).then(function(values){console.log(values);//postMessage(responseResolve);\nresolve(\"done\");},function(reason){console.error(\" box expenses errors\",reason);//postMessage(\"done with errors\");\nreject(\"error in promise array\");});}case 2:case'end':return _context20.stop();}}},_callee20,this);}));return function(_x33){return _ref21.apply(this,arguments);};}();req.onerror=function(event){console.log(\"error\",event);//postMessage(\"error\");\nreject(event);};});case 18:case'end':return _context21.stop();}}},_callee21,this);}));return function(_x28){return _ref16.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\",evt);postMessage(\"error\");};});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(3);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export generateDb */\n/* unused harmony export getAllFromStore */\n/* unused harmony export storeArray */\n/* unused harmony export deleteDb */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getFromDb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return storeData; });\n/* unused harmony export clearStorages */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return deleteFromDb; });\n/* unused harmony export verifyAndSaveInArray */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\nvar _this2=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var DB_NAME='plantar';var DB_VERSION=11;function generateDb(){console.log(\"openDb ...\");var req=indexedDB.open(DB_NAME,DB_VERSION);req.onsuccess=function(evt){var db=this.result;console.log(\"openDb DONE\");db.close();console.log(\"closeDb DONE\");};req.onerror=function(evt){console.error(\"openDb:\",evt.target.errorCode);};//this function is executed just one time when the db is deffined\nreq.onupgradeneeded=function(evt){console.log(\"openDb.onupgradeneeded\");var db=evt.target.result;try{store=this.transaction.objectStore('projects');db.deleteObjectStore('projects');db.deleteObjectStore('functionalUnits');db.deleteObjectStore('forestalUnits');db.deleteObjectStore('users');db.deleteObjectStore('dailyReports');db.deleteObjectStore('defaultActivities');}catch(e){}var store=db.createObjectStore(\"projects\",{keyPath:'id',autoIncrement:true});store.createIndex('administrative_act','administrative_act',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('customer','customer',{unique:false});store.createIndex('customer_id','customer_id',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('enviromental_control','enviromental_control',{unique:false});store.createIndex('inspector','inspector',{unique:false});store.createIndex('location','location',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phase','phase',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('representative_name','representative_name',{unique:false});store.createIndex('representative_position','representative_position',{unique:false});store.createIndex('responsible','responsible',{unique:false});store.createIndex('role_id','role_id',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"functionalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('code','code',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('project_id','project_id',{unique:false});store.createIndex('type','type',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"forestalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('after_image','after_image',{unique:false});store.createIndex('cap_cm','cap_cm',{unique:false});store.createIndex('code','code',{unique:false});store.createIndex('commercial_heigth_m','commercial_heigth_m',{unique:false});store.createIndex('common_name','common_name',{unique:false});store.createIndex('condition','condition',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('cup_density','cup_density',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('end_treatment','end_treatment',{unique:false});store.createIndex('epiphytes','epiphytes',{unique:false});store.createIndex('family','family',{unique:false});store.createIndex('functional_unit_id','functional_unit_id',{unique:false});store.createIndex('general_image','general_image',{unique:false});store.createIndex('health_status','health_status',{unique:false});store.createIndex('id_image','id_image',{unique:false});store.createIndex('margin','margin',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('note','note',{unique:false});store.createIndex('origin','origin',{unique:false});store.createIndex('products','products',{unique:false});store.createIndex('reference_image','reference_image',{unique:false});store.createIndex('resolution','resolution',{unique:false});store.createIndex('scientific_name','scientific_name',{unique:false});store.createIndex('start_treatment','start_treatment',{unique:false});store.createIndex('state','state',{unique:false});store.createIndex('total_heigth_m','total_heigth_m',{unique:false});store.createIndex('treatment','treatment',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('waypoint','waypoint',{unique:false});store.createIndex('x_cup_diameter_m','x_cup_diameter_m',{unique:false});store.createIndex('y_cup_diameter_m','y_cup_diameter_m',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"users\",{keyPath:'id'});store.createIndex('address','address',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('document','document',{unique:false});store.createIndex('document_type_id','document_type_id',{unique:false});store.createIndex('email','email',{unique:false});store.createIndex('lastname','lastname',{unique:false});store.createIndex('updated_at','created_at',{unique:false});store.createIndex('position_id','position_id',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phone','phone',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});//plantation and civil\nstore=db.createObjectStore(\"dailyReports\",{keyPath:'id'});store.createIndex('responsible','responsible',{unique:false});store.createIndex('field_assistant','field_assistant',{unique:false});store.createIndex('location','location',{unique:false});store.createIndex('report_date','report_date',{unique:false});store.createIndex('people_number','people_number',{unique:false});store.createIndex('type','type',{unique:false});store.createIndex('officials','officials',{unique:false});store.createIndex('assistants','assistants',{unique:false});store.createIndex('notes','notes',{unique:false});store.createIndex('civil_image_1','civil_image_1',{unique:false});store.createIndex('civil_image_2','civil_image_2',{unique:false});store.createIndex('civil_image_3','civil_image_3',{unique:false});store.createIndex('project_id','project_id',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('report_activities','report_activities',{unique:false});store.createIndex('required_staffs','required_staffs',{unique:false});store.createIndex('required_tools','required_tools',{unique:false});store.createIndex('civil','civil',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"defaultActivities\",{keyPath:'id'});store.createIndex('name','name',{unique:false});store.createIndex('measuring_unit','measuring_unit',{unique:false});store.createIndex('activity_type_id','activity_type_id',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"expenses\",{keyPath:'id'});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"boxExpenses\",{keyPath:'id'});store.createIndex('synchroState','synchroState',{unique:false});};}var getAllFromStore=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(storeName){var req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:req=indexedDB.open(DB_NAME);return _context.abrupt(\"return\",new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.getAll();dataSet.onsuccess=function(evt){console.log(\"dataSet success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};}));case 2:case\"end\":return _context.stop();}}},_callee,_this2);}));return function getAllFromStore(_x){return _ref.apply(this,arguments);};}();var storeArray=function storeArray(storeName,arraySet){var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(evt){var _this3=this;var db,tx,store,_loop,i;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);_loop=function _loop(i){if(arraySet[i].synchroState==null){arraySet[i].synchroState=true;}var request=store.get(arraySet[i].id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this3.result){var _process=store.put(arraySet[i]);_process.onsuccess=function(event){console.log(\"data updated\",event);};_process.onerror=function(event){console.log(\"error\",event);};console.log(\"update\");}else{var proccess=store.add(arraySet[i]);proccess.onsuccess=function(event){console.log(\"data added\",event);};process.onerror=function(event){console.log(\"error\",event);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};};for(i in arraySet){_loop(i);}_context2.next=8;return tx.onsuccess;case 8:console.log(\"transaction completed\");db.close();console.log(\"closeDb DONE\");case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var deleteDb=function deleteDb(){var req=indexedDB.deleteDatabase(DB_NAME);req.onsuccess=function(){console.log(\"Deleted database successfully\");};req.onerror=function(){console.log(\"Couldn't delete database\");};req.onblocked=function(){console.log(\"Couldn't delete database due to the operation being blocked\");};};var getFromDb=function getFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this4=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.get(elementId);dataSet.onsuccess=function(evt){console.log(\"data success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this4.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var storeData=function storeData(storeName,data){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(evt){var _this5=this;var db,tx,store,request;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);if(data.synchroState==null){data.synchroState=true;}request=store.get(data.id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this5.result){var _process2=store.put(data);_process2.onsuccess=function(event){console.log(\"data updated\",event);resolve(\"done\");};_process2.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"update\");}else{var proccess=store.add(data);proccess.onsuccess=function(event){console.log(\"data added\",event);resolve(\"done\");};process.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};case 8:case\"end\":return _context3.stop();}}},_callee3,this);}));return function(_x3){return _ref3.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var clearStorages=function clearStorages(storeArray){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(evt){var db,tx,i,store;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:db=this.result;tx=db.transaction(storeArray,'readwrite');_context4.t0=__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.keys(storeArray);case 3:if((_context4.t1=_context4.t0()).done){_context4.next=11;break;}i=_context4.t1.value;//console.log(storeArray.length);\n//console.log(i);\nstore=tx.objectStore(storeArray[i]);_context4.next=8;return store.clear();case 8:if(storeArray.length-1==i){resolve(\"done\");}else{console.log(\"no yet\");}/*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/_context4.next=3;break;case 11:case\"end\":return _context4.stop();}}},_callee4,this);}));return function(_x4){return _ref4.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\",evt);reject(_this2.error);};});};var deleteFromDb=function deleteFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this6=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readwrite');var store=tx.objectStore(storeName);var proc=store.delete(elementId);proc.onsuccess=function(evt){console.log(\"delete success\");db.close();resolve(evt.target.result);};proc.onerror=function(evt){console.log(\"delete error\");db.close();reject(_this6.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var verifyAndSaveInArray=function verifyAndSaveInArray(array,storeName){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this7=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readwrite');var store=tx.objectStore(storeName);var i=0;array.forEach(function(data){var proc=store.get(data[\"id\"]);proc.onsuccess=function(evt){//console.log(\"get success\",evt.target.result);\ni++;if(evt.target.result==null){store.add(data);}//console.log(\"equal\",i,array.length);\n//console.log(i,array.length);\nif(i===array.length){db.close();resolve(evt.target.result);}};proc.onerror=function(evt){//console.log(\"error in get\");\ni++;if(i===array.length){db.close();reject(_this7.error);}};});};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// b8e0d0ba88964487d75b.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8e0d0ba88964487d75b","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 0\n// module chunks = 0","import { getAllFromStore , storeData , getFromDb, deleteFromDb } from \"../helpers/indexDbModels\";\n\nconst DB_NAME = 'plantar'\n\nconst BASE_URL = 'https://plantarfuturo.com/ws';\n\nconst FUNCTIONAL_UNIT_URL = BASE_URL+\"/api/functional-unit\";\n\nconst FIRST_PHASE = BASE_URL+\"/api/forest-unit/first-phase\";\n\nconst SECOND_PHASE = BASE_URL+\"/api/forest-unit\";\n\nconst THIRD_PHASE = BASE_URL+\"/api/forest-unit/third-phase\";\n\nconst PLANTATION_REPORT_URL = BASE_URL+\"/api/daily-report\";\n\nconst CIVIL_REPORT_URL = BASE_URL+\"/api/civil-report\";\n\nconst EXPENSES_URL = BASE_URL+\"/api/expense\";\n\nconst EXPENSES_BOX_URL = BASE_URL+\"/api/bill\";\n\nvar promisesArray = [];\n\nlet responseResolve = \"done\";\n\nfunction UpdateFunctionalUnit(cursor){\n\n    responseResolve = \"update\";\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(FUNCTIONAL_UNIT_URL+\"/\"+data.id, { \n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(cursor.value)\n        }).then(response =>  response.json() ).catch( err => {\n            console.error(\"updating functional unit\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n        console.log(\"data to change in db\",data);\n        await storeData(\"functionalUnits\",data);\n        resolve(\"done\");\n\n    });\n\n        \n}\n\nfunction CreateFunctionalUnit(cursor){\n\n    let dbProccessArray = [];\n\n    responseResolve = \"update\";\n\n    let data = cursor.value;\n\n    let oldId = data.id;\n\n    return new Promise( async (resolve,reject) =>{\n\n        try{\n            console.log(\"Init fetching functional unit --------\");\n\n            let functionalU = await fetch(FUNCTIONAL_UNIT_URL, { \n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n           \n            }).then(response => response.json()).catch((error) => {\n                // Your error is here!\n                console.log(\"creating functional unit\",error)\n                reject(\"error\");\n            });;         \n            \n            console.log(\"id generado\",functionalU);\n            \n            \n            data.id =  functionalU.id;\n            data.synchroState = true;\n            await storeData(\"functionalUnits\",data);\n\n            await new Promise( (resolve,reject) =>{\n\n                let req = indexedDB.open(DB_NAME);  \n            \n                req.onsuccess = async function (evt) {\n            \n                    const db = this.result;\n            \n                    let tx = db.transaction([\"functionalUnits\",\"forestalUnits\"], 'readonly');\n\n                    let store = tx.objectStore(\"forestalUnits\");\n                    let index = store.index(\"functional_unit_id\");\n                    \n                    console.log(\"id value to filter\",oldId);\n                    \n                    let singleKeyRange = IDBKeyRange.only(oldId);\n\n\n                    let req = index.openCursor(singleKeyRange);\n                    req.onsuccess = async function(event) {\n                        let cursor = event.target.result;\n                        if (cursor) {\n                            // Do something with the matches.                      \n                            let data = cursor.value;\n                            data.functional_unit_id = functionalU.id;\n                            console.log(\"data to update\",data);                        \n                            dbProccessArray.push(storeData(\"forestalUnits\",data));                        \n                            cursor.continue();\n                        }\n                        else{\n                            console.log(\"last filtered data\");\n                            \n                            Promise.all(dbProccessArray).then(values => { \n                                console.log(values);\n                                resolve(\"done\");\n                            }, reason => {\n                                console.log(reason);\n                                postMessage(\"done with errors\");\n                            });                      \n                        }\n                    };\n                    req.onerror = evt => {\n                        reject(error);\n                    }\n                \n                }            \n                \n            });\n\n            await deleteFromDb(\"functionalUnits\",oldId);\n\n            resolve(\"Update functional Done\");\n\n        }catch(error){\n            console.log(\"error creating functional unit \",error);\n            reject(\"error\");\n        }\n    });\n\n}\n\nfunction updateForestalUnit(cursor){\n\n    responseResolve = \"update\";\n\n    let data = cursor.value;\n    return new Promise( async (resolve,reject) =>{\n        let funcUnit = await getFromDb(\"functionalUnits\",data.functional_unit_id);\n        console.log(\"registered fi\",funcUnit);\n        let project = await getFromDb(\"projects\",funcUnit.project_id);\n        console.log(\"project\",project);\n        let URL;\n        switch(project.phase)\n        {\n            case \"1\":\n                URL = FIRST_PHASE;\n            break;\n\n            case \"2\":\n                URL = SECOND_PHASE;\n            break;\n\n            case \"3\":\n                URL = THIRD_PHASE;\n            break;\n\n        }\n\n        await fetch(URL+\"/\"+data.id, { \n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"updating forestal unit\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"forestalUnits\",data);\n\n        resolve(\"done\");\n\n    });\n}\n\nfunction createForestalUnit(cursor){\n\n    responseResolve = \"update\";\n\n    let data = cursor.value;\n\n    let oldId = cursor.value.id;\n    return new Promise( async (resolve,reject) =>{\n        let funcUnit = await getFromDb(\"functionalUnits\",data.functional_unit_id);\n        console.log(\"registered fi\",funcUnit,\"original data\",data);\n        let project = await getFromDb(\"projects\",funcUnit.project_id);\n        console.log(\"project\",project);\n        let URL;\n        switch(project.phase)\n        {\n            case \"1\":\n                URL = FIRST_PHASE;\n            break;\n\n            case \"2\":\n                URL = SECOND_PHASE;\n            break;\n\n            case \"3\":\n                URL = THIRD_PHASE;\n            break;\n\n        }\n        \n        let newData = await fetch(URL, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n       \n        }).then( async response => {  \n            \n            if(response.status == 500 )\n            {\n                //console.log(response);\n                console.log(\"error detectado\");\n\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }else{\n                return await response.json();\n            }            \n            \n         }).catch( err => {\n            console.error(\"creating forestal unit\",err);\n            reject(\"error\");\n        });\n        \n        if(newData.id)\n        {\n            data.id = newData.id\n            data.synchroState = true;\n            await storeData(\"forestalUnits\",data);\n            await deleteFromDb(\"forestalUnits\",oldId);\n        }\n        \n\n        resolve(\"done\");\n\n    });\n}\n\nfunction updatePlantationReport(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(PLANTATION_REPORT_URL+\"/\"+data.id, { \n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"updating plantation report\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"dailyReports\",data);\n\n        resolve(\"done\");\n\n    });\n}\n\nfunction createPlantationReport(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(PLANTATION_REPORT_URL, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"create plantation report\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"dailyReports\",data);\n\n        resolve(\"done\");\n        \n    });\n}\n\nfunction updateCivilReport(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(CIVIL_REPORT_URL+\"/\"+data.id, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"update civil report\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"dailyReports\",data);\n\n        resolve(\"done\");        \n\n    });\n}\n\nfunction createCivilReport(cursor){\n\n    let data = cursor.value;\n\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(CIVIL_REPORT_URL, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"create plantation report\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"dailyReports\",data);\n\n        resolve(\"done\");\n\n    });\n}\n\nfunction updateExpense(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(EXPENSES_URL+\"/\"+data.id, { \n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"update expense\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"expenses\",data);\n\n        resolve(\"done\");        \n\n    });\n}\n\nfunction createExpense(cursor){\n\n    let data = cursor.value;\n\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(EXPENSES_URL, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"create expenses\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"expenses\",data);\n\n        resolve(\"done\");\n\n    });\n}\n\nfunction updateBoxExpense(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(EXPENSES_BOX_URL+\"/\"+data.id, { \n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"update expense\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"boxExpenses\",data);\n\n        resolve(\"done\");        \n\n    });\n}\n    \nfunction createBoxExpense(cursor){\n\n    let data = cursor.value;\n\n    return new Promise( async (resolve,reject) =>{\n\n        await fetch(EXPENSES_BOX_URL, { \n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response =>  { \n            \n            if(response.status == 500 )\n            {\n                console.log(\"error detectado\");\n                response.text().then(\n                    data => {\n                        console.log(data);\n                    }\n                );\n            }\n        \n        }).catch( err => {\n            console.error(\"create box expenses\",err);\n            reject(\"error\");\n        });\n\n        data.synchroState = true;\n\n        await storeData(\"boxExpenses\",data);\n\n        resolve(\"done\");\n\n    });\n}\n\n\nself.addEventListener('message', e => { // eslint-disable-line no-restricted-globals\n\n    console.log(\"on synchro worker\");    \n\n    let req = indexedDB.open(DB_NAME);  \n        \n    req.onsuccess = async function (evt) {\n\n        const db = this.result;\n\n        let tx = db.transaction([\"functionalUnits\"], 'readonly');\n        let store = tx.objectStore(\"functionalUnits\");\n        \n        let req = store.openCursor();\n\n        await new Promise( (resolve,reject) =>{\n\n            req.onsuccess = async function(event) {\n                let cursor = event.target.result;\n                if (cursor) {              \n\n                    if(cursor.value.synchroState == false)\n                    {\n                        console.log(cursor.value);\n                        console.log(\"data to send\");                    \n\n\n                        if(!Number.isInteger(cursor.value.id))\n                        {\n                            \n                            console.log(\"special send\");\n                            promisesArray.push(CreateFunctionalUnit(cursor));  \n                                                                               \n                            \n                        }\n                        else{\n                            promisesArray.push(UpdateFunctionalUnit(cursor));\n                        }\n                    }\n                    \n                    cursor.continue();\n\n                }\n                else {\n                    console.log(\"last data\");\n                    //postMessage(\"done\");\n                    Promise.all(promisesArray).then(values => { \n                        console.log(values);\n                        resolve(\"done\");      \n                      }, reason => {\n                        console.error(\"error in functional units\",reason);\n                        reject(\"error in promise array\");\n                    });                    \n                    \n                }\n            };\n\n            req.onerror = function(event){\n                console.log(\"error\",event);\n                //postMessage(\"error\");\n                reject(error)\n            }\n        \n        });\n\n      \n\n        tx = db.transaction([\"forestalUnits\"], 'readonly');\n\n        await new Promise( (resolve,reject) =>{\n\n            store = tx.objectStore(\"forestalUnits\");\n            \n            req = store.openCursor();\n\n            req.onsuccess = async function(event) {\n\n                let cursor = event.target.result;\n                if (cursor) {\n\n                    if(!cursor.value.synchroState)\n                    {\n                        console.log(cursor.value);\n                        console.log(\"data to send\");\n                        if(!Number.isInteger(cursor.value.id))\n                        {\n                            if(Number.isInteger(cursor.value.functional_unit_id))\n                            {\n                                console.log(\"new data\");\n                                promisesArray.push(createForestalUnit(cursor)); \n                            }    \n                        }\n                        else{\n                            console.log(\"update data\");\n                            promisesArray.push(updateForestalUnit(cursor)); \n                        }\n                    }\n                    \n                    cursor.continue();\n                }\n                else {\n                    console.log(\"last data\");\n                    \n                    \n                    Promise.all(promisesArray).then(values => { \n                        console.log(values);\n                        //postMessage(responseResolve);\n                        resolve(\"done\");         \n                      }, reason => {\n                        console.error(\"forestal unit errors\",reason);\n                        //postMessage(\"done with errors\");\n                        reject(\"error in promise array\");\n                    });\n                    \n                }\n\n            }\n\n            req.onerror = function(event){\n                console.log(\"error\",event);\n                //postMessage(\"error\");\n                reject(event)\n            }\n        \n        });\n\n        tx = db.transaction([\"dailyReports\"], 'readonly');\n\n        await new Promise( (resolve,reject) =>{\n\n            store = tx.objectStore(\"dailyReports\");\n            \n            req = store.openCursor();\n\n            req.onsuccess = async function(event) {\n\n                let cursor = event.target.result;\n                if (cursor) {\n\n                    if(!cursor.value.synchroState)\n                    {\n                        console.log(cursor.value);\n                        console.log(\"data to send\");\n                        if(!Number.isInteger(cursor.value.id))\n                        {                           \n                            console.log(\"new data\");\n                            if(cursor.value.civil)\n                            {\n                                promisesArray.push(createCivilReport(cursor));\n                            }\n                            else{\n                                promisesArray.push(createPlantationReport(cursor));\n                            }                               \n                        }\n                        else{\n                            console.log(\"update data\");\n                            if(cursor.value.civil)\n                            {\n                                promisesArray.push(updateCivilReport(cursor));\n                            }\n                            else{\n                                promisesArray.push(updatePlantationReport(cursor));\n                            }                             \n                        }\n                    }\n                    \n                    cursor.continue();\n                }\n                else {\n                    console.log(\"last data\");\n                    \n                    \n                    Promise.all(promisesArray).then(values => { \n                        console.log(values);\n                        //postMessage(responseResolve);\n                        resolve(\"done\");         \n                      }, reason => {\n                        console.error(\" plantation and civil errors\",reason);\n                        //postMessage(\"done with errors\");\n                        reject(\"error in promise array\");\n                    });\n                    \n                }\n\n            }\n\n            req.onerror = function(event){\n                console.log(\"error\",event);\n                //postMessage(\"error\");\n                reject(event)\n            }\n        })\n\n        tx = db.transaction([\"expenses\"], 'readonly');\n\n        await new Promise( (resolve,reject) =>{\n\n            store = tx.objectStore(\"expenses\");\n            \n            req = store.openCursor();\n\n            req.onsuccess = async function(event) {\n\n                let cursor = event.target.result;\n                if (cursor) {\n\n                    if(!cursor.value.synchroState)\n                    {\n                        console.log(cursor.value);\n                        console.log(\"data to send\");\n                        if(!Number.isInteger(cursor.value.id))\n                        {                           \n                            console.log(\"new data\");\n                            \n                            promisesArray.push(createExpense(cursor));\n                                                       \n                        }\n                        else{\n                            console.log(\"update data\");\n                            \n                            promisesArray.push(updateExpense(cursor));\n                                                         \n                        }\n                    }\n                    \n                    cursor.continue();\n                }\n                else {\n                    console.log(\"last data\");\n                    \n                    \n                    Promise.all(promisesArray).then(values => { \n                        console.log(values);\n                        //postMessage(responseResolve);\n                        resolve(\"done\");         \n                      }, reason => {\n                        console.error(\" expenses errors\",reason);\n                        //postMessage(\"done with errors\");\n                        reject(\"error in promise array\");\n                    });\n                    \n                }\n\n            }\n\n            req.onerror = function(event){\n                console.log(\"error\",event);\n                //postMessage(\"error\");\n                reject(event)\n            }\n        })\n\n        tx = db.transaction([\"boxExpenses\"], 'readonly');\n\n        await new Promise( (resolve,reject) =>{\n\n            store = tx.objectStore(\"boxExpenses\");\n            \n            req = store.openCursor();\n\n            req.onsuccess = async function(event) {\n\n                let cursor = event.target.result;\n                if (cursor) {\n\n                    if(!cursor.value.synchroState)\n                    {\n                        console.log(cursor.value);\n                        console.log(\"data to send\");\n                        if(!Number.isInteger(cursor.value.id))\n                        {                           \n                            console.log(\"new data\");\n                            \n                            promisesArray.push(createBoxExpense(cursor));\n                                                       \n                        }\n                        else{\n                            console.log(\"update data\");\n                            \n                            promisesArray.push(updateBoxExpense(cursor));\n                                                         \n                        }\n                    }\n                    \n                    cursor.continue();\n                }\n                else {\n                    console.log(\"last data\");\n                    \n                    \n                    Promise.all(promisesArray).then(values => { \n                        console.log(values);\n                        //postMessage(responseResolve);\n                        resolve(\"done\");         \n                      }, reason => {\n                        console.error(\" box expenses errors\",reason);\n                        //postMessage(\"done with errors\");\n                        reject(\"error in promise array\");\n                    });\n                    \n                }\n\n            }\n\n            req.onerror = function(event){\n                console.log(\"error\",event);\n                //postMessage(\"error\");\n                reject(event)\n            }\n        })\n\n    }\n    req.onerror = function (evt) {\n        console.log(\"error opening db\",evt);\n        postMessage(\"error\");\n    }\n\n    \n\n    \n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/workers/synchroData.worker.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js\n// module id = 3\n// module chunks = 0","const DB_NAME = 'plantar';\nconst DB_VERSION = 11; \n\nexport function generateDb() {    \n     console.log(\"openDb ...\");\n     let req = indexedDB.open(DB_NAME, DB_VERSION);\n\n    req.onsuccess = function (evt) {\n      const db = this.result;\n      console.log(\"openDb DONE\");\n      db.close();\n      console.log(\"closeDb DONE\");\n    };\n    req.onerror = function (evt) {\n      console.error(\"openDb:\", evt.target.errorCode);\n    };\n\n    //this function is executed just one time when the db is deffined\n    req.onupgradeneeded = function (evt) {\n        \n        console.log(\"openDb.onupgradeneeded\");\n        \n        let db = evt.target.result;\n\n        try {\n          store = this.transaction.objectStore('projects');\n          db.deleteObjectStore('projects');\n          db.deleteObjectStore('functionalUnits');\n          db.deleteObjectStore('forestalUnits');\n          db.deleteObjectStore('users');\n          db.deleteObjectStore('dailyReports');\n          db.deleteObjectStore('defaultActivities');  \n        }\n        catch(e) {\n         \n        }        \n\n        let store = db.createObjectStore(\n            \"projects\", { keyPath: 'id', autoIncrement: true });\n    \n          store.createIndex('administrative_act', 'administrative_act', { unique: false });\n          store.createIndex('created_at', 'created_at', { unique: false });\n          store.createIndex('customer', 'customer', { unique: false });\n          store.createIndex('customer_id', 'customer_id', { unique: false });\n          store.createIndex('east_coord', 'east_coord', { unique: false });\n          store.createIndex('enviromental_control', 'enviromental_control', { unique: false });  \n          store.createIndex('inspector', 'inspector', { unique: false });  \n          store.createIndex('location', 'location', { unique: false });\n          store.createIndex('name', 'name', { unique: false });\n          store.createIndex('phase', 'phase', { unique: false });\n          store.createIndex('north_coord', 'north_coord', { unique: false });\n          store.createIndex('representative_name', 'representative_name', { unique: false });\n          store.createIndex('representative_position', 'representative_position', { unique: false });\n          store.createIndex('responsible', 'responsible', { unique: false });\n          store.createIndex('role_id', 'role_id', { unique: false });\n          store.createIndex('updated_at', 'updated_at', { unique: false });\n          store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n        store = db.createObjectStore(\n            \"functionalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('project_id', 'project_id', { unique: false });\n           store.createIndex('type', 'type', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n        store = db.createObjectStore(\n            \"forestalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('after_image', 'after_image', { unique: false });\n           store.createIndex('cap_cm', 'cap_cm', { unique: false });\n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('commercial_heigth_m', 'commercial_heigth_m', { unique: false });\n           store.createIndex('common_name', 'common_name', { unique: false });\n           store.createIndex('condition', 'condition', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('cup_density', 'cup_density', { unique: false });\n           store.createIndex('east_coord', 'east_coord', { unique: false });\n           store.createIndex('end_treatment', 'end_treatment', { unique: false });\n           store.createIndex('epiphytes', 'epiphytes', { unique: false }); \n           store.createIndex('family', 'family', { unique: false });             \n           store.createIndex('functional_unit_id', 'functional_unit_id', { unique: false });\n           store.createIndex('general_image', 'general_image', { unique: false });\n           store.createIndex('health_status', 'health_status', { unique: false });\n           store.createIndex('id_image', 'id_image', { unique: false });\n           store.createIndex('margin', 'margin', { unique: false });\n           store.createIndex('north_coord', 'north_coord', { unique: false });\n           store.createIndex('note', 'note', { unique: false });\n           store.createIndex('origin', 'origin', { unique: false });\n           store.createIndex('products', 'products', { unique: false });\n           store.createIndex('reference_image', 'reference_image', { unique: false });\n           store.createIndex('resolution', 'resolution', { unique: false });\n           store.createIndex('scientific_name', 'scientific_name', { unique: false });\n           store.createIndex('start_treatment', 'start_treatment', { unique: false });\n           store.createIndex('state', 'state', { unique: false });\n           store.createIndex('total_heigth_m', 'total_heigth_m', { unique: false });\n           store.createIndex('treatment', 'treatment', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('waypoint', 'waypoint', { unique: false });\n           store.createIndex('x_cup_diameter_m', 'x_cup_diameter_m', { unique: false });\n           store.createIndex('y_cup_diameter_m', 'y_cup_diameter_m', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n           store = db.createObjectStore(\n            \"users\", { keyPath: 'id' });\n            \n           store.createIndex('address', 'address', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('document', 'document', { unique: false });\n           store.createIndex('document_type_id', 'document_type_id', { unique: false });\n           store.createIndex('email', 'email', { unique: false });\n           store.createIndex('lastname', 'lastname', { unique: false });\n           store.createIndex('updated_at', 'created_at', { unique: false });\n           store.createIndex('position_id', 'position_id', { unique: false });\n           store.createIndex('name', 'name', { unique: false });\n           store.createIndex('phone', 'phone', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n           //plantation and civil\n\n           store = db.createObjectStore(\n            \"dailyReports\", { keyPath: 'id' });\n            \n           store.createIndex('responsible', 'responsible', { unique: false });\n           store.createIndex('field_assistant', 'field_assistant', { unique: false });\n           store.createIndex('location', 'location', { unique: false });\n           store.createIndex('report_date', 'report_date', { unique: false });\n           store.createIndex('people_number', 'people_number', { unique: false });\n           store.createIndex('type', 'type', { unique: false });\n           store.createIndex('officials', 'officials', { unique: false });\n           store.createIndex('assistants', 'assistants', { unique: false });\n           store.createIndex('notes', 'notes', { unique: false });\n           store.createIndex('civil_image_1', 'civil_image_1', { unique: false });\n           store.createIndex('civil_image_2', 'civil_image_2', { unique: false });\n           store.createIndex('civil_image_3', 'civil_image_3', { unique: false });\n           store.createIndex('project_id', 'project_id', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('report_activities', 'report_activities', { unique: false });\n           store.createIndex('required_staffs', 'required_staffs', { unique: false });\n           store.createIndex('required_tools', 'required_tools', { unique: false });\n           store.createIndex('civil', 'civil', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n           store = db.createObjectStore(\n            \"defaultActivities\", { keyPath: 'id' });\n            \n           store.createIndex('name', 'name', { unique: false });\n           store.createIndex('measuring_unit', 'measuring_unit', { unique: false });\n           store.createIndex('activity_type_id', 'activity_type_id', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n           store = db.createObjectStore(\n            \"expenses\", { keyPath: 'id' });\n            \n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n           store = db.createObjectStore(\n            \"boxExpenses\", { keyPath: 'id' });\n            \n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n    };\n}\n\nexport const getAllFromStore = async (storeName) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.getAll();\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"dataSet success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");           \n            reject(this.error);\n        }\n\n    });\n\n    \n\n}\n\n\nexport const storeArray = (storeName, arraySet) => {\n\n    let req = indexedDB.open(DB_NAME);\n\n      req.onsuccess = async function (evt) {\n        \n        const db = this.result;\n        console.log(\"openDb DONE\");\n\n        let tx = db.transaction(storeName, 'readwrite');\n        let store = tx.objectStore(storeName);     \n        \n        for(let i in arraySet)\n        {\n\n            if(arraySet[i].synchroState == null)\n            {\n                arraySet[i].synchroState = true;\n            } \n\n            let request = store.get(arraySet[i].id);\n            \n            request.onsuccess = (evt) => {\n                \n                console.log(\"success request\",evt);\n                \n                if(this.result)\n                {\n                    let process = store.put(arraySet[i])\n                    process.onsuccess = function(event) {                        \n                        console.log(\"data updated\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n\n                    console.log(\"update\");\n                }\n                else{\n                    let proccess = store.add(arraySet[i]);\n                    proccess.onsuccess = function(event) {\n                        console.log(\"data added\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n                    \n                    console.log(\"create\");                    \n                }\n                \n            };\n\n            request.onerror = evt =>{\n                console.log(\"error request\",evt);\n            }   \n        \n        }    \n        await tx.onsuccess;\n        console.log(\"transaction completed\");    \n        db.close();\n        console.log(\"closeDb DONE\");        \n      };\n \n\n}\n\nexport const deleteDb = ()=>{\n    let req = indexedDB.deleteDatabase(DB_NAME);\n    req.onsuccess = function () {\n        console.log(\"Deleted database successfully\");\n    };\n    req.onerror = function () {\n        console.log(\"Couldn't delete database\");\n    };\n    req.onblocked = function () {\n        console.log(\"Couldn't delete database due to the operation being blocked\");\n    };\n}\n\nexport const getFromDb = (storeName, elementId) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.get(elementId);\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"data success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n\n    });\n}\n\nexport const storeData = (storeName, data) => {\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = async function (evt) {\n            const db = this.result;\n            console.log(\"openDb DONE\");\n\n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            \n                if(data.synchroState == null)\n                {\n                    data.synchroState = true;\n                } \n\n                let request = store.get(data.id);\n                \n                request.onsuccess = (evt) => {\n                    \n                    console.log(\"success request\",evt);\n                    \n                    if(this.result)\n                    {\n                        let process = store.put(data)\n                        process.onsuccess = function(event) {                        \n                            console.log(\"data updated\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n\n                        console.log(\"update\");\n                    }\n                    else{\n                        let proccess = store.add(data);\n                        proccess.onsuccess = function(event) {\n                            console.log(\"data added\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n                        \n                        console.log(\"create\");                    \n                    }\n                    \n                };\n\n                request.onerror = evt =>{\n                    console.log(\"error request\",evt);\n                }       \n        }\n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n    });\n}\n\nexport const clearStorages = (storeArray) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        req.onsuccess = async function (evt) {\n\n            const db = this.result;\n            let tx = db.transaction(storeArray, 'readwrite');\n    \n            for(let i in storeArray)\n            {\n                //console.log(storeArray.length);\n                //console.log(i);\n    \n                let store = tx.objectStore(storeArray[i]);\n    \n                await store.clear();\n\n                if(storeArray.length -1 == i )\n                {\n                    resolve(\"done\");\n                }\n                else{\n                    console.log(\"no yet\");\n                }\n                \n                /*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/\n            }\n        }\n        req.onerror = (evt) =>{\n            console.log(\"error opening db\",evt);\n            reject(this.error);\n        }\n    });    \n\n}\n\nexport const deleteFromDb = (storeName, elementId) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            let proc = store.delete(elementId);\n            proc.onsuccess = (evt) =>{\n                console.log(\"delete success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            proc.onerror = (evt) =>{\n                console.log(\"delete error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n      \n    });\n\n\n}\n\nexport const verifyAndSaveInArray = (array,storeName) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n\n            let i = 0;\n\n            array.forEach(data => {\n                \n                let proc = store.get(data[\"id\"]);\n\n                            \n\n                proc.onsuccess = (evt) =>{\n                    \n                    //console.log(\"get success\",evt.target.result);\n                    i++;\n\n                    if(evt.target.result == null)\n                    {\n                        store.add(data);\n                    }\n\n                    //console.log(\"equal\",i,array.length);\n\n                    //console.log(i,array.length);\n                    \n                    if (i === array.length) {\n                        db.close();\n                        resolve(evt.target.result);\n                    }\n                    \n                }\n                proc.onerror = (evt) =>{\n                    //console.log(\"error in get\");\n                    i++;\n                    \n                    if (i === array.length) {\n                        db.close();\n                        reject(this.error);\n                    }\n                    \n                }\n\n                \n            });\n            \n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n    \n    \n    });\n\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/indexDbModels.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}