{"version":3,"sources":["../4c429e2fd7f25a11d0db.worker.js","../webpack/bootstrap 4c429e2fd7f25a11d0db","../node_modules/babel-runtime/regenerator/index.js","workers/cleanData.worker.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js","helpers/indexDbModels.js","../node_modules/process/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__","self","addEventListener","e","indexedDB","open","onsuccess","evt","a","db","result","tx","transaction","store","objectStore","index","singleKeyRange","IDBKeyRange","only","req","openCursor","event","cursor","target","data","after_image","general_image","id_image","reference_image","console","log","dbProccessArray","push","storeData","continue","postMessage","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","global","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","type","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","iterator","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","process","_this2","DB_NAME","getAllFromStore","storeName","dataSet","getAll","close","onerror","synchroState","request","id","put","add","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"4c429e2fd7f25a11d0db.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__ = __webpack_require__(4);\nfunction _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var DB_NAME='plantar';self.addEventListener('message',function(e){var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(evt){var db,tx,store,index,singleKeyRange,req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=this.result;tx=db.transaction([\"functionalUnits\",\"forestalUnits\"],'readonly');store=tx.objectStore(\"forestalUnits\");index=store.index(\"SynchroState\");singleKeyRange=IDBKeyRange.only(true);req=index.openCursor(singleKeyRange);req.onsuccess=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(event){var cursor,data;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cursor=event.target.result;if(cursor){// Do something with the matches.                      \ndata=cursor.value;data.after_image=\"\";data.general_image=\"\";data.id_image=\"\";data.reference_image=\"\";console.log(\"data to update\",data);dbProccessArray.push(Object(__WEBPACK_IMPORTED_MODULE_1__helpers_indexDbModels__[\"a\" /* storeData */])(\"forestalUnits\",data));cursor.continue();}else{postMessage(\"ok second thread\");}case 2:case'end':return _context.stop();}}},_callee,this);}));return function(_x2){return _ref2.apply(this,arguments);};}();case 7:case'end':return _context2.stop();}}},_callee2,this);}));return function(_x){return _ref.apply(this,arguments);};}();});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(3);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export generateDb */\n/* unused harmony export getAllFromStore */\n/* unused harmony export storeArray */\n/* unused harmony export deleteDb */\n/* unused harmony export getFromDb */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return storeData; });\n/* unused harmony export clearStorages */\n/* unused harmony export deleteFromDb */\n/* unused harmony export verifyAndSaveInArray */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\nvar _this2=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}var DB_NAME='plantar';var DB_VERSION=11;function generateDb(){console.log(\"openDb ...\");var req=indexedDB.open(DB_NAME,DB_VERSION);req.onsuccess=function(evt){var db=this.result;console.log(\"openDb DONE\");db.close();console.log(\"closeDb DONE\");};req.onerror=function(evt){console.error(\"openDb:\",evt.target.errorCode);};//this function is executed just one time when the db is deffined\nreq.onupgradeneeded=function(evt){console.log(\"openDb.onupgradeneeded\");var db=evt.target.result;try{store=this.transaction.objectStore('projects');db.deleteObjectStore('projects');db.deleteObjectStore('functionalUnits');db.deleteObjectStore('forestalUnits');db.deleteObjectStore('users');db.deleteObjectStore('dailyReports');db.deleteObjectStore('defaultActivities');}catch(e){}var store=db.createObjectStore(\"projects\",{keyPath:'id',autoIncrement:true});store.createIndex('administrative_act','administrative_act',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('customer','customer',{unique:false});store.createIndex('customer_id','customer_id',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('enviromental_control','enviromental_control',{unique:false});store.createIndex('inspector','inspector',{unique:false});store.createIndex('location','location',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phase','phase',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('representative_name','representative_name',{unique:false});store.createIndex('representative_position','representative_position',{unique:false});store.createIndex('responsible','responsible',{unique:false});store.createIndex('role_id','role_id',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"functionalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('code','code',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('project_id','project_id',{unique:false});store.createIndex('type','type',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"forestalUnits\",{keyPath:'id',autoIncrement:true});store.createIndex('after_image','after_image',{unique:false});store.createIndex('cap_cm','cap_cm',{unique:false});store.createIndex('code','code',{unique:false});store.createIndex('commercial_heigth_m','commercial_heigth_m',{unique:false});store.createIndex('common_name','common_name',{unique:false});store.createIndex('condition','condition',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('cup_density','cup_density',{unique:false});store.createIndex('east_coord','east_coord',{unique:false});store.createIndex('end_treatment','end_treatment',{unique:false});store.createIndex('epiphytes','epiphytes',{unique:false});store.createIndex('family','family',{unique:false});store.createIndex('functional_unit_id','functional_unit_id',{unique:false});store.createIndex('general_image','general_image',{unique:false});store.createIndex('health_status','health_status',{unique:false});store.createIndex('id_image','id_image',{unique:false});store.createIndex('margin','margin',{unique:false});store.createIndex('north_coord','north_coord',{unique:false});store.createIndex('note','note',{unique:false});store.createIndex('origin','origin',{unique:false});store.createIndex('products','products',{unique:false});store.createIndex('reference_image','reference_image',{unique:false});store.createIndex('resolution','resolution',{unique:false});store.createIndex('scientific_name','scientific_name',{unique:false});store.createIndex('start_treatment','start_treatment',{unique:false});store.createIndex('state','state',{unique:false});store.createIndex('total_heigth_m','total_heigth_m',{unique:false});store.createIndex('treatment','treatment',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('waypoint','waypoint',{unique:false});store.createIndex('x_cup_diameter_m','x_cup_diameter_m',{unique:false});store.createIndex('y_cup_diameter_m','y_cup_diameter_m',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store.createIndex('localComment','localComment',{unique:false});store=db.createObjectStore(\"users\",{keyPath:'id'});store.createIndex('address','address',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('document','document',{unique:false});store.createIndex('document_type_id','document_type_id',{unique:false});store.createIndex('email','email',{unique:false});store.createIndex('lastname','lastname',{unique:false});store.createIndex('updated_at','created_at',{unique:false});store.createIndex('position_id','position_id',{unique:false});store.createIndex('name','name',{unique:false});store.createIndex('phone','phone',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});//plantation and civil\nstore=db.createObjectStore(\"dailyReports\",{keyPath:'id'});store.createIndex('responsible','responsible',{unique:false});store.createIndex('field_assistant','field_assistant',{unique:false});store.createIndex('location','location',{unique:false});store.createIndex('report_date','report_date',{unique:false});store.createIndex('people_number','people_number',{unique:false});store.createIndex('type','type',{unique:false});store.createIndex('officials','officials',{unique:false});store.createIndex('assistants','assistants',{unique:false});store.createIndex('notes','notes',{unique:false});store.createIndex('civil_image_1','civil_image_1',{unique:false});store.createIndex('civil_image_2','civil_image_2',{unique:false});store.createIndex('civil_image_3','civil_image_3',{unique:false});store.createIndex('project_id','project_id',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('report_activities','report_activities',{unique:false});store.createIndex('required_staffs','required_staffs',{unique:false});store.createIndex('required_tools','required_tools',{unique:false});store.createIndex('civil','civil',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"defaultActivities\",{keyPath:'id'});store.createIndex('name','name',{unique:false});store.createIndex('measuring_unit','measuring_unit',{unique:false});store.createIndex('activity_type_id','activity_type_id',{unique:false});store.createIndex('created_at','created_at',{unique:false});store.createIndex('updated_at','updated_at',{unique:false});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"expenses\",{keyPath:'id'});store.createIndex('synchroState','synchroState',{unique:false});store=db.createObjectStore(\"boxExpenses\",{keyPath:'id'});store.createIndex('synchroState','synchroState',{unique:false});};}var getAllFromStore=function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(storeName){var req;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:req=indexedDB.open(DB_NAME);return _context.abrupt(\"return\",new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.getAll();dataSet.onsuccess=function(evt){console.log(\"dataSet success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};}));case 2:case\"end\":return _context.stop();}}},_callee,_this2);}));return function getAllFromStore(_x){return _ref.apply(this,arguments);};}();var storeArray=function storeArray(storeName,arraySet){var req=indexedDB.open(DB_NAME);req.onsuccess=function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(evt){var _this3=this;var db,tx,store,_loop,i;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);_loop=function _loop(i){if(arraySet[i].synchroState==null){arraySet[i].synchroState=true;}var request=store.get(arraySet[i].id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this3.result){var _process=store.put(arraySet[i]);_process.onsuccess=function(event){console.log(\"data updated\",event);};_process.onerror=function(event){console.log(\"error\",event);};console.log(\"update\");}else{var proccess=store.add(arraySet[i]);proccess.onsuccess=function(event){console.log(\"data added\",event);};process.onerror=function(event){console.log(\"error\",event);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};};for(i in arraySet){_loop(i);}_context2.next=8;return tx.onsuccess;case 8:console.log(\"transaction completed\");db.close();console.log(\"closeDb DONE\");case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var deleteDb=function deleteDb(){var req=indexedDB.deleteDatabase(DB_NAME);req.onsuccess=function(){console.log(\"Deleted database successfully\");};req.onerror=function(){console.log(\"Couldn't delete database\");};req.onblocked=function(){console.log(\"Couldn't delete database due to the operation being blocked\");};};var getFromDb=function getFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this4=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readonly');var store=tx.objectStore(storeName);var dataSet=store.get(elementId);dataSet.onsuccess=function(evt){console.log(\"data success\");db.close();resolve(evt.target.result);};dataSet.onerror=function(evt){console.log(\"dataSet error\");db.close();reject(_this4.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var storeData=function storeData(storeName,data){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(evt){var _this5=this;var db,tx,store,request;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:db=this.result;console.log(\"openDb DONE\");tx=db.transaction(storeName,'readwrite');store=tx.objectStore(storeName);if(data.synchroState==null){data.synchroState=true;}request=store.get(data.id);request.onsuccess=function(evt){console.log(\"success request\",evt);if(_this5.result){var _process2=store.put(data);_process2.onsuccess=function(event){console.log(\"data updated\",event);resolve(\"done\");};_process2.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"update\");}else{var proccess=store.add(data);proccess.onsuccess=function(event){console.log(\"data added\",event);resolve(\"done\");};process.onerror=function(event){console.log(\"error\",event);reject(this.error);};console.log(\"create\");}};request.onerror=function(evt){console.log(\"error request\",evt);};case 8:case\"end\":return _context3.stop();}}},_callee3,this);}));return function(_x3){return _ref3.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var clearStorages=function clearStorages(storeArray){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee4(evt){var db,tx,i,store;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:db=this.result;tx=db.transaction(storeArray,'readwrite');_context4.t0=__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.keys(storeArray);case 3:if((_context4.t1=_context4.t0()).done){_context4.next=11;break;}i=_context4.t1.value;//console.log(storeArray.length);\n//console.log(i);\nstore=tx.objectStore(storeArray[i]);_context4.next=8;return store.clear();case 8:if(storeArray.length-1==i){resolve(\"done\");}else{console.log(\"no yet\");}/*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/_context4.next=3;break;case 11:case\"end\":return _context4.stop();}}},_callee4,this);}));return function(_x4){return _ref4.apply(this,arguments);};}();req.onerror=function(evt){console.log(\"error opening db\",evt);reject(_this2.error);};});};var deleteFromDb=function deleteFromDb(storeName,elementId){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this6=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readwrite');var store=tx.objectStore(storeName);var proc=store.delete(elementId);proc.onsuccess=function(evt){console.log(\"delete success\");db.close();resolve(evt.target.result);};proc.onerror=function(evt){console.log(\"delete error\");db.close();reject(_this6.error);};};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};var verifyAndSaveInArray=function verifyAndSaveInArray(array,storeName){var req=indexedDB.open(DB_NAME);return new Promise(function(resolve,reject){req.onsuccess=function(evt){var _this7=this;var db=this.result;console.log(\"openDb DONE\");var tx=db.transaction(storeName,'readwrite');var store=tx.objectStore(storeName);var i=0;array.forEach(function(data){var proc=store.get(data[\"id\"]);proc.onsuccess=function(evt){//console.log(\"get success\",evt.target.result);\ni++;if(evt.target.result==null){store.add(data);}//console.log(\"equal\",i,array.length);\n//console.log(i,array.length);\nif(i===array.length){db.close();resolve(evt.target.result);}};proc.onerror=function(evt){//console.log(\"error in get\");\ni++;if(i===array.length){db.close();reject(_this7.error);}};});};req.onerror=function(evt){console.log(\"error opening db\");reject(this.error);};});};\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// 4c429e2fd7f25a11d0db.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c429e2fd7f25a11d0db","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 0\n// module chunks = 0","import { getAllFromStore , storeData , getFromDb, deleteFromDb } from \"../helpers/indexDbModels\";\n\n\nconst DB_NAME = 'plantar'\n\n\nself.addEventListener('message', e => {\n\n    let req = indexedDB.open(DB_NAME);  \n            \n    req.onsuccess = async function (evt) {\n\n        const db = this.result;\n\n        let tx = db.transaction([\"functionalUnits\",\"forestalUnits\"], 'readonly');\n        let store = tx.objectStore(\"forestalUnits\");\n        let index = store.index(\"SynchroState\"); \n        \n        let singleKeyRange = IDBKeyRange.only(true);\n\n\n        let req = index.openCursor(singleKeyRange);\n        req.onsuccess = async function(event) {\n            let cursor = event.target.result;\n            if (cursor) {\n                // Do something with the matches.                      \n                let data = cursor.value;\n                data.after_image = \"\";\n                data.general_image = \"\";\n                data.id_image = \"\";\n                data.reference_image = \"\";\n                console.log(\"data to update\",data);                        \n                dbProccessArray.push(storeData(\"forestalUnits\",data));                        \n                cursor.continue();\n            }\n            else{\n                postMessage(\"ok second thread\");\n            }\n        }\n    }\n\n    \n})\n\n\n// WEBPACK FOOTER //\n// ./src/workers/cleanData.worker.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js\n// module id = 3\n// module chunks = 0","const DB_NAME = 'plantar';\nconst DB_VERSION = 11; \n\nexport function generateDb() {    \n     console.log(\"openDb ...\");\n     let req = indexedDB.open(DB_NAME, DB_VERSION);\n\n    req.onsuccess = function (evt) {\n      const db = this.result;\n      console.log(\"openDb DONE\");\n      db.close();\n      console.log(\"closeDb DONE\");\n    };\n    req.onerror = function (evt) {\n      console.error(\"openDb:\", evt.target.errorCode);\n    };\n\n    //this function is executed just one time when the db is deffined\n    req.onupgradeneeded = function (evt) {\n        \n        console.log(\"openDb.onupgradeneeded\");\n        \n        let db = evt.target.result;\n\n        try {\n          store = this.transaction.objectStore('projects');\n          db.deleteObjectStore('projects');\n          db.deleteObjectStore('functionalUnits');\n          db.deleteObjectStore('forestalUnits');\n          db.deleteObjectStore('users');\n          db.deleteObjectStore('dailyReports');\n          db.deleteObjectStore('defaultActivities');  \n        }\n        catch(e) {\n         \n        }        \n\n        let store = db.createObjectStore(\n            \"projects\", { keyPath: 'id', autoIncrement: true });\n    \n          store.createIndex('administrative_act', 'administrative_act', { unique: false });\n          store.createIndex('created_at', 'created_at', { unique: false });\n          store.createIndex('customer', 'customer', { unique: false });\n          store.createIndex('customer_id', 'customer_id', { unique: false });\n          store.createIndex('east_coord', 'east_coord', { unique: false });\n          store.createIndex('enviromental_control', 'enviromental_control', { unique: false });  \n          store.createIndex('inspector', 'inspector', { unique: false });  \n          store.createIndex('location', 'location', { unique: false });\n          store.createIndex('name', 'name', { unique: false });\n          store.createIndex('phase', 'phase', { unique: false });\n          store.createIndex('north_coord', 'north_coord', { unique: false });\n          store.createIndex('representative_name', 'representative_name', { unique: false });\n          store.createIndex('representative_position', 'representative_position', { unique: false });\n          store.createIndex('responsible', 'responsible', { unique: false });\n          store.createIndex('role_id', 'role_id', { unique: false });\n          store.createIndex('updated_at', 'updated_at', { unique: false });\n          store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n        store = db.createObjectStore(\n            \"functionalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('project_id', 'project_id', { unique: false });\n           store.createIndex('type', 'type', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n        store = db.createObjectStore(\n            \"forestalUnits\", { keyPath: 'id', autoIncrement: true });\n            \n           store.createIndex('after_image', 'after_image', { unique: false });\n           store.createIndex('cap_cm', 'cap_cm', { unique: false });\n           store.createIndex('code', 'code', { unique: false });\n           store.createIndex('commercial_heigth_m', 'commercial_heigth_m', { unique: false });\n           store.createIndex('common_name', 'common_name', { unique: false });\n           store.createIndex('condition', 'condition', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('cup_density', 'cup_density', { unique: false });\n           store.createIndex('east_coord', 'east_coord', { unique: false });\n           store.createIndex('end_treatment', 'end_treatment', { unique: false });\n           store.createIndex('epiphytes', 'epiphytes', { unique: false }); \n           store.createIndex('family', 'family', { unique: false });             \n           store.createIndex('functional_unit_id', 'functional_unit_id', { unique: false });\n           store.createIndex('general_image', 'general_image', { unique: false });\n           store.createIndex('health_status', 'health_status', { unique: false });\n           store.createIndex('id_image', 'id_image', { unique: false });\n           store.createIndex('margin', 'margin', { unique: false });\n           store.createIndex('north_coord', 'north_coord', { unique: false });\n           store.createIndex('note', 'note', { unique: false });\n           store.createIndex('origin', 'origin', { unique: false });\n           store.createIndex('products', 'products', { unique: false });\n           store.createIndex('reference_image', 'reference_image', { unique: false });\n           store.createIndex('resolution', 'resolution', { unique: false });\n           store.createIndex('scientific_name', 'scientific_name', { unique: false });\n           store.createIndex('start_treatment', 'start_treatment', { unique: false });\n           store.createIndex('state', 'state', { unique: false });\n           store.createIndex('total_heigth_m', 'total_heigth_m', { unique: false });\n           store.createIndex('treatment', 'treatment', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('waypoint', 'waypoint', { unique: false });\n           store.createIndex('x_cup_diameter_m', 'x_cup_diameter_m', { unique: false });\n           store.createIndex('y_cup_diameter_m', 'y_cup_diameter_m', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n           store.createIndex('localComment', 'localComment', { unique: false });\n           \n           store = db.createObjectStore(\n            \"users\", { keyPath: 'id' });\n            \n           store.createIndex('address', 'address', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('document', 'document', { unique: false });\n           store.createIndex('document_type_id', 'document_type_id', { unique: false });\n           store.createIndex('email', 'email', { unique: false });\n           store.createIndex('lastname', 'lastname', { unique: false });\n           store.createIndex('updated_at', 'created_at', { unique: false });\n           store.createIndex('position_id', 'position_id', { unique: false });\n           store.createIndex('name', 'name', { unique: false });\n           store.createIndex('phone', 'phone', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n           //plantation and civil\n\n           store = db.createObjectStore(\n            \"dailyReports\", { keyPath: 'id' });\n            \n           store.createIndex('responsible', 'responsible', { unique: false });\n           store.createIndex('field_assistant', 'field_assistant', { unique: false });\n           store.createIndex('location', 'location', { unique: false });\n           store.createIndex('report_date', 'report_date', { unique: false });\n           store.createIndex('people_number', 'people_number', { unique: false });\n           store.createIndex('type', 'type', { unique: false });\n           store.createIndex('officials', 'officials', { unique: false });\n           store.createIndex('assistants', 'assistants', { unique: false });\n           store.createIndex('notes', 'notes', { unique: false });\n           store.createIndex('civil_image_1', 'civil_image_1', { unique: false });\n           store.createIndex('civil_image_2', 'civil_image_2', { unique: false });\n           store.createIndex('civil_image_3', 'civil_image_3', { unique: false });\n           store.createIndex('project_id', 'project_id', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('report_activities', 'report_activities', { unique: false });\n           store.createIndex('required_staffs', 'required_staffs', { unique: false });\n           store.createIndex('required_tools', 'required_tools', { unique: false });\n           store.createIndex('civil', 'civil', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n           store = db.createObjectStore(\n            \"defaultActivities\", { keyPath: 'id' });\n            \n           store.createIndex('name', 'name', { unique: false });\n           store.createIndex('measuring_unit', 'measuring_unit', { unique: false });\n           store.createIndex('activity_type_id', 'activity_type_id', { unique: false });\n           store.createIndex('created_at', 'created_at', { unique: false });\n           store.createIndex('updated_at', 'updated_at', { unique: false });\n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n\n           store = db.createObjectStore(\n            \"expenses\", { keyPath: 'id' });\n            \n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n           store = db.createObjectStore(\n            \"boxExpenses\", { keyPath: 'id' });\n            \n           store.createIndex('synchroState', 'synchroState', { unique: false });\n\n    };\n}\n\nexport const getAllFromStore = async (storeName) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.getAll();\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"dataSet success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");           \n            reject(this.error);\n        }\n\n    });\n\n    \n\n}\n\n\nexport const storeArray = (storeName, arraySet) => {\n\n    let req = indexedDB.open(DB_NAME);\n\n      req.onsuccess = async function (evt) {\n        \n        const db = this.result;\n        console.log(\"openDb DONE\");\n\n        let tx = db.transaction(storeName, 'readwrite');\n        let store = tx.objectStore(storeName);     \n        \n        for(let i in arraySet)\n        {\n\n            if(arraySet[i].synchroState == null)\n            {\n                arraySet[i].synchroState = true;\n            } \n\n            let request = store.get(arraySet[i].id);\n            \n            request.onsuccess = (evt) => {\n                \n                console.log(\"success request\",evt);\n                \n                if(this.result)\n                {\n                    let process = store.put(arraySet[i])\n                    process.onsuccess = function(event) {                        \n                        console.log(\"data updated\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n\n                    console.log(\"update\");\n                }\n                else{\n                    let proccess = store.add(arraySet[i]);\n                    proccess.onsuccess = function(event) {\n                        console.log(\"data added\",event);\n                    };\n                    process.onerror = function(event) {\n                        console.log(\"error\",event);\n                    };\n                    \n                    console.log(\"create\");                    \n                }\n                \n            };\n\n            request.onerror = evt =>{\n                console.log(\"error request\",evt);\n            }   \n        \n        }    \n        await tx.onsuccess;\n        console.log(\"transaction completed\");    \n        db.close();\n        console.log(\"closeDb DONE\");        \n      };\n \n\n}\n\nexport const deleteDb = ()=>{\n    let req = indexedDB.deleteDatabase(DB_NAME);\n    req.onsuccess = function () {\n        console.log(\"Deleted database successfully\");\n    };\n    req.onerror = function () {\n        console.log(\"Couldn't delete database\");\n    };\n    req.onblocked = function () {\n        console.log(\"Couldn't delete database due to the operation being blocked\");\n    };\n}\n\nexport const getFromDb = (storeName, elementId) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        \n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readonly');\n            let store = tx.objectStore(storeName);\n            let dataSet = store.get(elementId);\n            dataSet.onsuccess = (evt) =>{\n                console.log(\"data success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            dataSet.onerror = (evt) =>{\n                console.log(\"dataSet error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n\n    });\n}\n\nexport const storeData = (storeName, data) => {\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = async function (evt) {\n            const db = this.result;\n            console.log(\"openDb DONE\");\n\n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            \n                if(data.synchroState == null)\n                {\n                    data.synchroState = true;\n                } \n\n                let request = store.get(data.id);\n                \n                request.onsuccess = (evt) => {\n                    \n                    console.log(\"success request\",evt);\n                    \n                    if(this.result)\n                    {\n                        let process = store.put(data)\n                        process.onsuccess = function(event) {                        \n                            console.log(\"data updated\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n\n                        console.log(\"update\");\n                    }\n                    else{\n                        let proccess = store.add(data);\n                        proccess.onsuccess = function(event) {\n                            console.log(\"data added\",event);\n                            resolve(\"done\");\n                        };\n                        process.onerror = function(event) {\n                            console.log(\"error\",event);\n                            reject(this.error);\n                        };\n                        \n                        console.log(\"create\");                    \n                    }\n                    \n                };\n\n                request.onerror = evt =>{\n                    console.log(\"error request\",evt);\n                }       \n        }\n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n    });\n}\n\nexport const clearStorages = (storeArray) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n        req.onsuccess = async function (evt) {\n\n            const db = this.result;\n            let tx = db.transaction(storeArray, 'readwrite');\n    \n            for(let i in storeArray)\n            {\n                //console.log(storeArray.length);\n                //console.log(i);\n    \n                let store = tx.objectStore(storeArray[i]);\n    \n                await store.clear();\n\n                if(storeArray.length -1 == i )\n                {\n                    resolve(\"done\");\n                }\n                else{\n                    console.log(\"no yet\");\n                }\n                \n                /*request.onsuccess( evt => {\n                    console.log(\"storage clear\",storeArray[i]);                \n                }) \n                request.onerror( evt =>{\n                    console.log(\"storage clear error\",storeArray[i],evt);\n                })*/\n            }\n        }\n        req.onerror = (evt) =>{\n            console.log(\"error opening db\",evt);\n            reject(this.error);\n        }\n    });    \n\n}\n\nexport const deleteFromDb = (storeName, elementId) =>{\n    \n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n            let proc = store.delete(elementId);\n            proc.onsuccess = (evt) =>{\n                console.log(\"delete success\");               \n                db.close();\n                resolve(evt.target.result);\n            }\n            proc.onerror = (evt) =>{\n                console.log(\"delete error\");\n                db.close();\n                reject(this.error);\n            }\n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n      \n    });\n\n\n}\n\nexport const verifyAndSaveInArray = (array,storeName) =>{\n\n    let req = indexedDB.open(DB_NAME);\n\n    return new Promise((resolve, reject) => {\n\n        req.onsuccess = function (evt) {\n      \n            const db = this.result;\n            console.log(\"openDb DONE\");\n      \n            let tx = db.transaction(storeName, 'readwrite');\n            let store = tx.objectStore(storeName);\n\n            let i = 0;\n\n            array.forEach(data => {\n                \n                let proc = store.get(data[\"id\"]);\n\n                            \n\n                proc.onsuccess = (evt) =>{\n                    \n                    //console.log(\"get success\",evt.target.result);\n                    i++;\n\n                    if(evt.target.result == null)\n                    {\n                        store.add(data);\n                    }\n\n                    //console.log(\"equal\",i,array.length);\n\n                    //console.log(i,array.length);\n                    \n                    if (i === array.length) {\n                        db.close();\n                        resolve(evt.target.result);\n                    }\n                    \n                }\n                proc.onerror = (evt) =>{\n                    //console.log(\"error in get\");\n                    i++;\n                    \n                    if (i === array.length) {\n                        db.close();\n                        reject(this.error);\n                    }\n                    \n                }\n\n                \n            });\n            \n        }\n        \n        req.onerror = function (evt){\n            console.log(\"error opening db\");         \n            reject(this.error);\n        }\n    \n    \n    });\n\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/indexDbModels.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}